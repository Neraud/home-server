---
# To avoid loops inside prometheus_operator
_prometheus_operator_var_loader:
  base_image:
    repo: quay.io
    name: "prometheus-operator/prometheus-operator"
    tag: "v0.50.0"

prometheus_operator:
  enabled: "{{ prometheus_operator_enabled | default(True) }}"

  base_image: "{{ _prometheus_operator_var_loader.base_image }}"

  labels_def:
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/component: controller

  labels_desc:
    app.kubernetes.io/version: "{{ _prometheus_operator_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: prometheus

  container:
    image: "{{ docker_private_registry.url }}/{{ _prometheus_operator_var_loader.base_image.name | regex_replace('.*/', '') }}:{{ _prometheus_operator_var_loader.base_image.tag }}"
    requests_cpu: "{{ prometheus_operator_container_requests_cpu | default('25m') }}"
    requests_memory: "{{ prometheus_operator_container_requests_memory | default('100Mi') }}"
    limits_cpu: "{{ prometheus_operator_container_limits_cpu | default('50m') }}"
    limits_memory: "{{ prometheus_operator_container_limits_memory | default('200Mi') }}"
    config_reloader_requests_cpu: "{{ prometheus_operator_container_config_reloader_requests_cpu | default('25m') }}"
    config_reloader_requests_memory: "{{ prometheus_operator_container_config_reloader_requests_memory | default('25Mi') }}"
    config_reloader_limits_cpu: "{{ prometheus_operator_container_config_reloader_limits_cpu | default('50m') }}"
    config_reloader_limits_memory: "{{ prometheus_operator_container_config_reloader_limits_memory | default('25Mi') }}"

# To avoid loops prometheus_operator_rbac_proxy prometheus_operator
_prometheus_operator_rbac_proxy_var_loader:
  base_image:
    repo: quay.io
    name: "brancz/kube-rbac-proxy"
    tag: "v0.11.0"

prometheus_operator_rbac_proxy:
  base_image: "{{ _prometheus_operator_rbac_proxy_var_loader.base_image }}"
  container:
    image: "{{ docker_private_registry.url }}/{{ _prometheus_operator_rbac_proxy_var_loader.base_image.name | regex_replace('.*/', '') }}:{{ _prometheus_operator_rbac_proxy_var_loader.base_image.tag }}"
    requests_cpu: "{{ prometheus_operator_container_requests_cpu | default('10m') }}"
    requests_memory: "{{ prometheus_operator_container_requests_memory | default('20Mi') }}"
    limits_cpu: "{{ prometheus_operator_container_limits_cpu | default('20m') }}"
    limits_memory: "{{ prometheus_operator_container_limits_memory | default('40Mi') }}"

# To avoid loops inside prometheus
_prometheus_var_loader:
  base_image:
    repo: quay.io
    name: "prometheus/prometheus"
    tag: "v2.29.2"
  namespace: "monitoring-prometheus"

prometheus:
  retention: "{{ prometheus_retention | default('7d') }}"

  namespace: "{{ _prometheus_var_loader.namespace }}"
  base_image: "{{ _prometheus_var_loader.base_image }}"

  labels_def:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s

  labels_desc:
    app.kubernetes.io/version: "{{ _prometheus_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: prometheus

  container:
    image: "{{ docker_private_registry.url }}/{{ _prometheus_var_loader.base_image.name | regex_replace('.*/', '') }}:{{ _prometheus_var_loader.base_image.tag }}"
    requests_cpu: "{{ prometheus_container_requests_cpu | default('100m') }}"
    requests_memory: "{{ prometheus_container_requests_memory | default('1024Mi') }}"
    limits_cpu: "{{ prometheus_container_limits_cpu | default('400m') }}"
    limits_memory: "{{ prometheus_container_limits_memory | default('1024Mi') }}"

  context_root: "{{ prometheus_context_root | default('') }}"
  servername: "prometheus-k8s.{{ _prometheus_var_loader.namespace }}.svc.cluster.local"

# To avoid loops inside alertmanager
_alertmanager_var_loader:
  base_image:
    repo: quay.io
    name: "prometheus/alertmanager"
    tag: "v0.23.0"

alertmanager:
  base_image: "{{ _alertmanager_var_loader.base_image }}"

  labels_def:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/instance: k8s

  labels_desc:
    app.kubernetes.io/version: "{{ _alertmanager_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: prometheus

  container:
    image: "{{ docker_private_registry.url }}/{{ _alertmanager_var_loader.base_image.name | regex_replace('.*/', '') }}:{{ _alertmanager_var_loader.base_image.tag }}"
    requests_cpu: "{{ alertmanager_container_requests_cpu | default('25m') }}"
    requests_memory: "{{ alertmanager_container_requests_memory | default('128Mi') }}"
    limits_cpu: "{{ alertmanager_container_limits_cpu | default('50m') }}"
    limits_memory: "{{ alertmanager_container_limits_memory | default('128Mi') }}"

  smtp:
    enabled: "{{ alertmanager_smtp_enabled | default(True) }}"
    smarthost: "{{ alertmanager_smtp_smarthost | default(zonemta.smtp_servername + ':587') }}"
    require_tls: "{{ alertmanager_smtp_require_tls | default(True) }}"
    from: "{{ alertmanager_smtp_from | default('alertmanager@' + web_base_domain) }}"
    auth_username: "{{ alertmanager_smtp_auth_username | default(zonemta.feeder.authentication_username) }}"
    auth_password: "{{ alertmanager_smtp_auth_password | default(zonemta.feeder.authentication_password) }}"

  context_root: "{{ alertmanager_context_root | default('') }}"
  default_receiver: "{{ alertmanager_default_receiver | default('default') }}"
  receivers: "{{ alertmanager_receivers | default([]) }}"

service_monitors:
  # Multiply all scrap intervals with this factor.
  # For example, a standard 30s interval with a factor 2 becomes 60s
  interval_factor: "{{ service_monitors_interval_factor | default(1) }}"
