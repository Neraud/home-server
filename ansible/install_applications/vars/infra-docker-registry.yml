---

# To avoid loops inside docker_registry
_docker_registry_var_loader:
  port: "{{ docker_registry_port | default(30500) }}"
  base_image:
    name: "registry"
    tag: "2.7.1"
  namespace: "infra-docker-registry"

docker_registry:
  enabled: "{{ docker_registry_enabled | default(True) }}"

  namespace: "{{ _docker_registry_var_loader.namespace }}"
  base_image: "{{ _docker_registry_var_loader.base_image }}"

  labels_def:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: registry

  labels_desc:
    app.kubernetes.io/version: "{{ _docker_registry_var_loader.base_image.tag }}"

  container:
    image: "{% if _docker_registry_var_loader.base_image.repo is defined %}{{ _docker_registry_var_loader.base_image.repo }}/{% endif %}{{ _docker_registry_var_loader.base_image.name }}:{{ _docker_registry_var_loader.base_image.tag }}"
    requests_cpu: "{{ docker_registry_container_requests_cpu | default('50m') }}"
    requests_memory: "{{ docker_registry_container_requests_memory | default('64Mi') }}"
    limits_cpu: "{{ docker_registry_container_limits_cpu | default('100m') }}"
    limits_memory: "{{ docker_registry_container_limits_memory | default('64Mi') }}"

  servername: "{{ docker_registry_servername | default('registry.' + _docker_registry_var_loader.namespace + '.svc.cluster.local') }}"
  port: "{{ _docker_registry_var_loader.port }}"
  url: "{{ docker_registry_url | default('127.0.0.1:' + _docker_registry_var_loader.port) }}"
  notification_endpoints: "{{ docker_registry_notification_endpoints | default([]) }}"
