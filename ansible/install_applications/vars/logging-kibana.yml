---

# To avoid loops inside kibana
_kibana_var_loader:
  base_image:
    name: "amazon/opendistro-for-elasticsearch-kibana"
    tag: "1.2.0"

kibana:
  enabled: "{{ kibana_enabled | default(True) }}"

  namespace: "logging-kibana"
  base_image: "{{ _kibana_var_loader.base_image }}"

  container:
    image: "{{ docker_registry.url }}/{{ _kibana_var_loader.base_image.name | regex_replace('.*/', '') }}:{{ _kibana_var_loader.base_image.tag }}"
    requests_cpu: "{{ kibana_container_requests_cpu | default('1000m') }}"
    requests_memory: "{{ kibana_container_requests_memory | default('2048Mi') }}"
    limits_cpu: "{{ kibana_container_limits_cpu | default('1000m') }}"
    limits_memory: "{{ kibana_container_limits_memory | default('2048Mi') }}"
  
  nodejs_max_memory: "{{ kibana_nodejs_max_memory | default('1500') }}"

  context_path: "{{ kibana_context_path | default('/kibana') }}"
  
  elasticsearch:
    user: "{{ kibana_elasticsearch_user | default('kibana') }}"
    password: "{{ kibana_elasticsearch_password | default('password') }}"
    index: .kibana

  multitenancy:
    enabled: False

  export_saved:
    script_path: "{{ kibana_export_saved_script_path | default(standard_user.home + '/tools/kibana_save_objects.py') }}"
    output_dir: "{{ kibana_export_saved_output_dir | default(standard_user.home + '/kibana_saved_objects') }}"
