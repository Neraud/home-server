---
# To avoid loops inside paperless
_paperless_var_loader:
  namespace: "tool-paperless"
  base_image:
    repo: "ghcr.io"
    name: "paperless-ngx/paperless-ngx"
    tag: "1.10.2"
  context_root: "{{ paperless_context_root | default('') }}"

paperless:
  enabled: "{{ paperless_enabled | default(True) }}"

  namespace: "{{ _paperless_var_loader.namespace }}"
  base_image: "{{ _paperless_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "{{ _paperless_var_loader.base_image.name | regex_replace('.*/', '') }}-custom"
    tag: "{{ _paperless_var_loader.base_image.tag }}"

  app_backup:
    name: tool-paperless
    repository: "{{ restic_apps_backup_repository }}"
    namespace: "{{ _paperless_var_loader.namespace }}"
    apps_to_stop:
      - name: paperless
        type: statefulset
        replicas: 1
    longhorn_volumes:
      - volume_name: paperless-data
        pvc_name: paperless-data-pv-claim-paperless-0

  labels_def:
    app.kubernetes.io/name: paperless
    app.kubernetes.io/component: paperless

  labels_desc:
    app.kubernetes.io/version: "{{ _paperless_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: paperless

  container:
    requests_cpu: "{{ paperless_container_requests_cpu | default('75m') }}"
    requests_memory: "{{ paperless_container_requests_memory | default('256Mi') }}"
    limits_cpu: "{{ paperless_container_limits_cpu | default('750m') }}"
    limits_memory: "{{ paperless_container_limits_memory | default('1G') }}" # With large-ish PDF documents (~10MB), 512M isn't enough
    storage:
      data: "{{ paperless_container_storage_data | default('128M') }}"

  context_root: "{{ _paperless_var_loader.context_root }}"
  secret_key: "{{ paperless_secret_key }}"
  admin:
    user: "{{ paperless_admin_user }}"
    mail: "{{ paperless_admin_mail }}"
    password: "{{ paperless_admin_password }}"
  settings:
    ocr_languagues: "{{ paperless_settings_ocr_languagues }}"
    default_ocr_languague: "{{ paperless_settings_default_ocr_languague }}"
    task_workers: "{{ paperless_settings_task_workers }}"
    webserver_workers: "{{ paperless_settings_webserver_workers }}"
    threads_per_worker: "{{ paperless_settings_threads_per_worker }}"
    consumer_polling: "{{ paperless_settings_consumer_polling }}"
    consumer_delete_duplicates: "{{ paperless_settings_consumer_delete_duplicates }}"
    consumer_recursive: "{{ paperless_settings_consumer_recursive }}"
    consumer_ignore_patterns: "{{ paperless_settings_consumer_ignore_patterns }}"
    consumer_subdirs_as_tags: "{{ paperless_settings_consumer_subdirs_as_tags }}"
    convert_memory_limit: "{{ paperless_settings_convert_memory_limit }}"
    convert_tmpdir: "{{ paperless_settings_convert_tmpdir }}"
    filename_format: "{{ paperless_settings_filename_format }}"

# To avoid loops inside paperless_pgsql
_paperless_pgsql_var_loader:
  base_image:
    repo: "docker.io"
    name: "library/postgres"
    tag: "15.1-alpine3.17"

paperless_pgsql:
  base_image: "{{ _paperless_pgsql_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "{{ _paperless_pgsql_var_loader.base_image.name | regex_replace('.*/', '') }}"
    tag: "{{ _paperless_pgsql_var_loader.base_image.tag }}"

  app_backup:
    name: tool-paperless_pgsql
    repository: "{{ restic_apps_backup_repository }}"
    namespace: "{{ _paperless_var_loader.namespace }}"
    apps_to_stop:
      - name: pgsql
        type: statefulset
        replicas: 1
    longhorn_volumes:
      - volume_name: paperless-pgsql
        pvc_name: pgsql-pv-claim-pgsql-0

  labels_def:
    app.kubernetes.io/name: paperless
    app.kubernetes.io/component: pgsql

  labels_desc:
    app.kubernetes.io/version: "{{ _paperless_pgsql_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: paperless

  container:
    requests_cpu: "{{ paperless_pgsql_container_requests_cpu | default('50m') }}"
    requests_memory: "{{ paperless_pgsql_container_requests_memory | default('256Mi') }}"
    limits_cpu: "{{ paperless_pgsql_container_limits_cpu | default('250m') }}"
    limits_memory: "{{ paperless_pgsql_container_limits_memory | default('256Mi') }}"
    storage:
      data: "{{ paperless_pgsql_container_storage_data | default('512M') }}"

  user: "{{ paperless_pgsql_user | default('paperless') }}"
  database: "{{ paperless_pgsql_database | default('paperless') }}"
  password: "{{ paperless_pgsql_password }}"

# To avoid loops inside paperless_redis
_paperless_redis_var_loader:
  base_image:
    repo: "docker.io"
    name: "library/redis"
    tag: "7.0.7-alpine3.17"

paperless_redis:
  base_image: "{{ _paperless_redis_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "{{ _paperless_redis_var_loader.base_image.name | regex_replace('.*/', '') }}"
    tag: "{{ _paperless_redis_var_loader.base_image.tag }}"

  labels_def:
    app.kubernetes.io/name: paperless
    app.kubernetes.io/component: redis

  labels_desc:
    app.kubernetes.io/version: "{{ _paperless_redis_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: paperless

  container:
    requests_cpu: "{{ paperless_redis_container_requests_cpu | default('25m') }}"
    requests_memory: "{{ paperless_redis_container_requests_memory | default('32Mi') }}"
    limits_cpu: "{{ paperless_redis_container_limits_cpu | default('75m') }}"
    limits_memory: "{{ paperless_redis_container_limits_memory | default('32Mi') }}"
    storage:
      data: "{{ paperless_redis_container_storage_data | default('32M') }}"
  
  health_username: "{{ paperless_redis_health_username | default('health') }}"
  #username: "{{ paperless_redis_username | default('paperless') }}"
  username: "default" # paperless-ng uses aioredis v1.3.1, which doesn't support users, it only looks for a password
  password: "{{ paperless_redis_password }}"
