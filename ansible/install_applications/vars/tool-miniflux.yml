---
# To avoid loops inside miniflux
_miniflux_var_loader:
  namespace: "tool-miniflux"
  base_image:
    repo: "ghcr.io"
    name: "miniflux/miniflux"
    tag: "2.0.39"

miniflux:
  enabled: "{{ miniflux_enabled | default(True) }}"

  namespace: "{{ _miniflux_var_loader.namespace }}"
  base_image: "{{ _miniflux_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "{{ _miniflux_var_loader.base_image.name | regex_replace('.*/', '') }}"
    tag: "{{ _miniflux_var_loader.base_image.tag }}"

  labels_def:
    app.kubernetes.io/name: miniflux
    app.kubernetes.io/component: web

  labels_desc:
    app.kubernetes.io/version: "{{ _miniflux_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: miniflux

  container:
    requests_cpu: "{{ miniflux_container_requests_cpu | default('25m') }}"
    requests_memory: "{{ miniflux_container_requests_memory | default('128Mi') }}"
    limits_cpu: "{{ miniflux_container_limits_cpu | default('250m') }}"
    limits_memory: "{{ miniflux_container_limits_memory | default('128Mi') }}"

  admin_user: "{{ miniflux_admin_user | default('admin') }}"
  admin_password: "{{ miniflux_admin_password | default('clear_password') }}"

  config:
    worker_pool_size: "{{ miniflux_config_worker_pool_size | default('5') }}"
    polling_frequency: "{{ miniflux_config_polling_frequency | default('15') }}"
    polling_parsing_error_limit: "{{ miniflux_config_polling_parsing_error_limit | default('3') }}"
    batch_size: "{{ miniflux_config_batch_size | default('100') }}"
    cleanup_frequency_hours: "{{ miniflux_config_cleanup_frequency_hours | default('24') }}"
    cleanup_archive_unread_days: "{{ miniflux_config_cleanup_archive_unread_days | default('180') }}"
    cleanup_archive_read_days: "{{ miniflux_config_cleanup_archive_read_days | default('60') }}"


# To avoid loops inside miniflux_pgsql
_miniflux_pgsql_var_loader:
  base_image:
    repo: "docker.io"
    name: "library/postgres"
    tag: "15.0-alpine3.16"

miniflux_pgsql:
  base_image: "{{ _miniflux_pgsql_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "miniflux-{{ _miniflux_pgsql_var_loader.base_image.name | regex_replace('.*/', '') }}"
    tag: "{{ _miniflux_pgsql_var_loader.base_image.tag }}"

  app_backup:
    name: tool-miniflux_pgsql
    repository: "{{ restic_apps_backup_repository }}"
    namespace: "{{ _miniflux_var_loader.namespace }}"
    apps_to_stop:
      - name: miniflux-pgsql
        type: statefulset
        replicas: 1
      - name: miniflux
        type: deployment
        replicas: 1
    longhorn_volumes:
      - volume_name: miniflux-pgsql
        pvc_name: miniflux-pgsql-pv-claim-pgsql-0

  labels_def:
    app.kubernetes.io/name: miniflux
    app.kubernetes.io/component: pgsql

  labels_desc:
    app.kubernetes.io/version: "{{ _miniflux_pgsql_var_loader.base_image.tag }}"
    app.kubernetes.io/part-of: miniflux

  container:
    requests_cpu: "{{ miniflux_pgsql_container_requests_cpu | default('50m') }}"
    requests_memory: "{{ miniflux_pgsql_container_requests_memory | default('256Mi') }}"
    limits_cpu: "{{ miniflux_pgsql_container_limits_cpu | default('250m') }}"
    limits_memory: "{{ miniflux_pgsql_container_limits_memory | default('256Mi') }}"
    storage:
      data: "{{ miniflux_pgsql_container_storage_data | default('256M') }}"

  user: "{{ miniflux_pgsql_user | default('miniflux') }}"
  database: "{{ miniflux_pgsql_database | default('miniflux') }}"
  password: "{{ miniflux_pgsql_password | default('clear_password') }}"


# To avoid loops inside miniflux
_miniflux_reminiflux_var_loader:
  base_builder_image:
    repo: "docker.io"
    name: "library/node"
    tag: "19.0.0-alpine3.16"
  base_image:
    repo: "docker.io"
    name: "library/nginx"
    tag: "1.23.2-alpine"
  repo: "reminiflux/reminiflux"
  commit: "153dc9464cef69f7c29bff1d680cfa0013b5e281"
  
miniflux_reminiflux:
  base_builder_image: "{{ _miniflux_reminiflux_var_loader.base_builder_image }}"
  base_image: "{{ _miniflux_reminiflux_var_loader.base_image }}"
  private_image:
    repo: "{{ docker_private_registry.url }}"
    name: "reminiflux-{{ _miniflux_reminiflux_var_loader.base_image.name | regex_replace('.*/', '') }}"
    tag: "{{ _miniflux_reminiflux_var_loader.base_image.tag }}-{{ _miniflux_reminiflux_var_loader.commit }}"
  repo: "{{ _miniflux_reminiflux_var_loader.repo }}"
  commit: "{{ _miniflux_reminiflux_var_loader.commit }}"
    
  labels_def:
    app.kubernetes.io/name: miniflux
    app.kubernetes.io/component: reminiflux

  labels_desc:
    app.kubernetes.io/version: "{{ _miniflux_reminiflux_var_loader.commit }}"
    app.kubernetes.io/part-of: miniflux

  container:
    requests_cpu: "{{ miniflux_reminiflux_container_requests_cpu | default('25m') }}"
    requests_memory: "{{ miniflux_reminiflux_container_requests_memory | default('16Mi') }}"
    limits_cpu: "{{ miniflux_reminiflux_container_limits_cpu | default('100m') }}"
    limits_memory: "{{ miniflux_reminiflux_container_limits_memory | default('16Mi') }}"
