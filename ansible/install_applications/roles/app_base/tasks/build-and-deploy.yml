---
- name: Check if Argo Workflows CLI is configured
  ansible.builtin.command: argo version
  changed_when: no
  failed_when: no
  register: argo_workflows_cli_status

- name: Check if Argo CD is deployed
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: "dev-argo-cd"
    name: argocd-server
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubeconfig_context }}"
  register: argo_cd_status

- name: Check if Argo tasks is deployed
  kubernetes.core.k8s_info:
    kind: Namespace
    name: dev-argo-tasks
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubeconfig_context }}"
  register: argo_workflows_tasks_status

- set_fact:
    argo_workflows_installed: "{{ argo_workflows_cli_status.rc == 0 }}"
    argo_workflows_tasks_installed: "{{ argo_workflows_tasks_status.resources | length > 0 }}"
    argo_cd_installed: "{{ argo_cd_status.resources | length > 0 and argo_cd_status.resources[0].status.readyReplicas | default(0) > 0 }}"

- set_fact:
    argo_fully_installed: "{{ argo_workflows_installed and argo_workflows_tasks_installed and argo_cd_installed}}"

- name: "Build and deploy {{ app_name }} manually"
  block:
  - name: "Find {{ app_name }} images to build"
    ansible.builtin.find:
      paths: "{{ app_build_path }}"
      recurse: no
      file_type: directory
    register: images_to_build
  
  - name: "Build each {{ app_name }} image manually"
    ansible.builtin.include_tasks: build-manual.yml
    loop: "{{ images_to_build.files }}"
    loop_control:
      label: "{{ item.path | basename }}"
    vars:
      image_build_path: "{{ item.path }}"

  - name: "Deploy {{ app_name }} manually"
    kubernetes.core.k8s:
      definition: "{{ lookup('ansible.builtin.pipe', 'SOPS_AGE_KEY_FILE={{ sops_age_key_file }} kustomize build --enable-alpha-plugins --enable-exec ' + app_deploy_path) }}"
      state: present
      kubeconfig: "{{ kubeconfig_path }}"
      context: "{{ kubeconfig_context }}"
  when: not argo_fully_installed

- name: "Build and deploy {{ app_name }} with argo"
  ansible.builtin.include_tasks: build-argo.yml
  when: argo_fully_installed
