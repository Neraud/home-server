---

- name: Ensure Prometheus namespace exists
  import_tasks: ../../_base.deploy/tasks/custom-namespace.yml
  vars:
    application_namespace: "{{ prometheus.namespace }}"

- name: Ensure BusyBox image is up-to-date in the private registry
  import_tasks: ../../_base.deploy/tasks/docker-image-private-registry.yml
  vars:
    base_image: "{{ busybox.base_image }}"
    private_image: "{{ busybox.container.image }}"

- name: Ensure Prometheus Operator image is up-to-date in the private registry
  import_tasks: ../../_base.deploy/tasks/docker-image-private-registry.yml
  vars:
    base_image: "{{ prometheus_operator.base_image }}"
    private_image: "{{ prometheus_operator.container.image }}"

- name: Ensure Prometheus image is up-to-date in the private registry
  import_tasks: ../../_base.deploy/tasks/docker-image-private-registry.yml
  vars:
    base_image: "{{ prometheus.base_image }}"
    private_image: "{{ prometheus.container.image }}"

- name: Ensure AlertManager image is up-to-date in the private registry
  import_tasks: ../../_base.deploy/tasks/docker-image-private-registry.yml
  vars:
    base_image: "{{ alertmanager.base_image }}"
    private_image: "{{ alertmanager.container.image }}"

- name: Deploy Prometheus Operator
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/operator/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Deploy Prometheus
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/prometheus/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: List AlertManager config files
  set_fact:
    alertmanager_config_files: "{{ alertmanager_config_files | default([]) + [ item ] }}"
  with_fileglob:
    - "{{ role_path }}/app/config/alertmanager/*"

- name: Deploy AlertManager
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/alertmanager/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Deploy Prometheus ServiceMonitors
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/service-monitors/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: List Prometheus rules files from custom
  set_fact:
    prometheus_rules_custom: "{{ prometheus_rules_custom | default([]) + [ item ] }}"
  with_fileglob:
    - "{{ role_path }}/app/config/prometheus/rules/custom/*"

- name: List Prometheus rules files from gluster-mixin
  set_fact:
    prometheus_rules_gluster_mixin: "{{ prometheus_rules_gluster_mixin | default([]) + [ item ] }}"
  with_fileglob:
    - "{{ role_path }}/app/config/prometheus/rules/gluster-mixin/*"

- name: List Prometheus rules files from kube-prometheus
  set_fact:
    prometheus_rules_kube_prometheus: "{{ prometheus_rules_kube_prometheus | default([]) + [ item ] }}"
  with_fileglob:
    - "{{ role_path }}/app/config/prometheus/rules/kube-prometheus/*"

- name: Deploy Prometheus Rules
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    namespace: "{{ prometheus.namespace }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/rules/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Deploy Ingress
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"
