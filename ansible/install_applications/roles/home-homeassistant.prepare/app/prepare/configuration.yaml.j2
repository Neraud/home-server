homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 0
  longitude: 0
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: UTC
  # Customization file
  customize: !include customize.yaml

  # https://www.home-assistant.io/docs/authentication/providers/
  auth_providers:
    # the native provider is required the first time HomeAssistant is accessed.
    # Once the first user has been created, it can be disabled
    - type: homeassistant
    - type: command_line
      command: /opt/ldap-auth/ldap-auth.sh
      args: ["/opt/ldap-auth/config.cfg"]
      meta: true

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  base_url: https://home.{{ web_base_domain }}
  use_x_forwarded_for: true
  trusted_proxies: 10.244.0.0/16

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

recorder:
  db_url: !secret recorder_mysql_url

# https://home-assistant.io/components/mqtt/
mqtt:
  # https://home-assistant.io/docs/mqtt/broker/#run-your-own
  broker: mosquitto.default
  port: 8883
  username: !secret mqtt_username
  password: !secret mqtt_password
  certificate: /etc/ssl/cluster/ca.cert
  discovery: true

notify:
  - name: email_user
    platform: smtp
    server: {{ homeassistant.smtp.host }}
    port: {{ homeassistant.smtp.port }}
    timeout: 15
    sender: {{ homeassistant.smtp.from }}
    sender_name: {{ homeassistant.smtp.displayFrom }}
    encryption: {{ homeassistant.smtp.encryption }}
    username: !secret smtp_username
    password: !secret smtp_password
    recipient:
      - !secret smtp_recipient_user
{% if homeassistant.gotify.enabled %}
  - name: gotify
    platform: rest
    resource: http://gotify/message
    method: POST_JSON
    headers: 
      X-Gotify-Key: !secret gotify_application_token
    message_param_name: message
    title_param_name: title
    data:
      extras:
        client::display:
          contentType: "text/markdown"
{% endif %}


# Track the sun
sun:

# Sensors
sensor:
  # Weather prediction
  - platform: yr

  # Test sensor for manual MQTT
  - platform: mqtt
    name: Test MQTT sensor
    state_topic: "test/test_sensor"

  # Test sensor for RoomAssistant
  # Manually configuring the sensor is not required, as RoomAssistant exposes the configuration via Discovery.
  #- platform: mqtt
  #  name: Test RoomAssistant
  #  state_topic: "homeassistant/sensor/example-room/example-script/state"
  #  unit_of_measurement: '%'
  #  value_template: "{{ '{{ value_json.value }}' }}"

# Text to speech
tts:
  - platform: google

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml