apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gotify
  namespace: {{ gotify.namespace }}
  labels:
    {{ gotify.labels_def | to_nice_yaml() | indent(4) }}
    {{ gotify.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{ gotify.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ gotify.labels_def | to_nice_yaml() | indent(8) }}
        {{ gotify.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      initContainers:
      - name: create-data-dir
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /app/data/db
            mkdir -p /app/data/images
            mkdir -p /app/data/plugins
            chown -R 1000:1000 /app/data/*
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: gotify-pv-claim
          mountPath: /app/data
      containers:
      - name: gotify
        image: "{{ gotify.private_image | image_full_name }}"
        imagePullPolicy: Always        
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: "GOTIFY_SERVER_PORT"
          value: "8080"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /health
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: "{{ gotify.container.requests_cpu }}"
            memory: "{{ gotify.container.requests_memory }}"
          limits:
            cpu: "{{ gotify.container.limits_cpu }}"
            memory: "{{ gotify.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: gotify-pv-claim
          mountPath: /app/data
        - name: gotify-config
          mountPath: /etc/gotify/config.yml
          subPath: config.yml
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: gotify-config
        configMap:
          name: gotify-config
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: gotify-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_longhorn_high_durability_storage_class_name }}
      resources:
        requests:
          storage: {{ gotify.container.storage.data }}
