apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: homeassistant
  namespace: {{ homeassistant.namespace }}
  labels:
    app.kubernetes.io/name: homeassistant
    app.kubernetes.io/component: homeassistant
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: homeassistant
      app.kubernetes.io/component: homeassistant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homeassistant
        app.kubernetes.io/component: homeassistant
    spec:
      containers:
      - image: "{{ homeassistant.container.image }}"
        name: homeassistant
        ports:
        - containerPort: 8123
          name: homeassistant
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: homeassistant-pv-claim
          mountPath: /config
        - name: homeassistant-socat-config
          mountPath: /etc/supervisor/conf.d/
        - name: homeassistant-config
          mountPath: /opt/ldap-auth/config.cfg
          subPath: ldap-auth-config.cfg
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.cert
          subPath: ca.crt
        resources:
          requests:
            cpu: "{{ homeassistant.container.requests_cpu }}"
            memory: "{{ homeassistant.container.requests_memory }}"
          limits:
            cpu: "{{ homeassistant.container.limits_cpu }}"
            memory: "{{ homeassistant.container.limits_memory }}"
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: homeassistant-config
        configMap:
          name: homeassistant-config
      - name: homeassistant-socat-config
        configMap:
          name: homeassistant-socat-config
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: homeassistant-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: 256M
      selector:
        matchLabels:
          app.kubernetes.io/name: homeassistant
          app.kubernetes.io/component: homeassistant
