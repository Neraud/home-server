apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: "{{ zonemta.namespace }}"
  labels:
    {{ zonemta_mongo.labels_def | to_nice_yaml() | indent(4) }}
    {{ zonemta_mongo.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{ zonemta_mongo.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ zonemta_mongo.labels_def | to_nice_yaml() | indent(8) }}
        {{ zonemta_mongo.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      initContainers:
      - name: create-data-dir
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /data/db
            mkdir -p /data/configdb
            chown -R 1001:1001 /data/*
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: mongo-pv-claim
          mountPath: /data
      containers:
      - name: mongo
        image: "{{ zonemta_mongo.private_image | image_full_name }}"
        imagePullPolicy: Always
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ zonemta_mongo.root_user }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-pass
              key: password
        - name: MONGO_INITDB_DATABASE
          value: {{ zonemta_mongo.database }}
        ports:
        - containerPort: 27017
          name: mongo
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
        # With mongodb 6, the mongo cli has been replaced by mongosh
        # However, mongosh is TOO slow (issue : https://jira.mongodb.org/browse/MONGOSH-1240) and can't be used for our probe
        # (timed at around 20 sec on the vagrant test env)
        # TODO : revisit this once the issue is fixed
        #readinessProbe:
        #  exec:
        #    command:
        #    - mongosh
        #    - --eval
        #    - "db.adminCommand('ping')"
        #  timeoutSeconds: 5
        #  initialDelaySeconds: 10
        #  periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: mongo
          timeoutSeconds: 5
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: "{{ zonemta_mongo.container.requests_cpu }}"
            memory: "{{ zonemta_mongo.container.requests_memory }}"
          limits:
            cpu: "{{ zonemta_mongo.container.limits_cpu }}"
            memory: "{{ zonemta_mongo.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - mountPath: /tmp
          name: tmp-volume
        - name: mongo-pv-claim
          mountPath: /data/db
          subPath: db
        - name: mongo-pv-claim
          mountPath: /data/configdb
          subPath: configdb
        - name: mongo-init
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: tmp-volume
        emptyDir: {}
      - name: mongo-init
        secret:
          secretName: mongo-init
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: mongo-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: 512M
      selector:
        matchLabels:
          {{ zonemta_mongo.labels_def | to_nice_yaml() | indent(10) }}
