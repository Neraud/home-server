---
- name: Ensure Deluge namespace exists
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/custom-namespace.yml
  vars:
    application_namespace: "{{ deluge.namespace }}"
    create_nfs_pvc: [ nfs-download ]

# TODO : we can't mount a Longhorn RWX volume to back it up :/
#- name: Deploy Deluge backup script
#  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/backup.yml
#  vars:
#    app_backup: "{{ deluge.app_backup }}"
#  tags: backup

- name: Ensure BusyBox image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ busybox.base_image }}"
    private_image: "{{ busybox.private_image }}"

- name: Ensure Deluge base image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ deluge_base.base_image }}"
    private_image: "{{ deluge_base.private_image }}"
    build: yes
    build_path: "{{ role_path }}/app/build/base"
    build_args:
      deluge_version: "{{ deluge.version }}"

- name: Ensure Deluge daemon image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ deluge_base.private_image }}"
    private_image: "{{ deluge_daemon.private_image }}"
    build: yes
    build_path: "{{ role_path }}/app/build/daemon"

- name: Ensure Deluge web image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ deluge_base.private_image }}"
    private_image: "{{ deluge_web.private_image }}"
    build: yes
    build_path: "{{ role_path }}/app/build/web"

- name: Deploy Deluge
  kubernetes.core.k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubeconfig_context }}"
  with_fileglob:
    - "{{ role_path }}/app/deploy/*.yaml*"
