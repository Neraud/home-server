apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deluge-web
  namespace: {{ deluge.namespace }}
  labels:
    {{ deluge_web.labels_def | to_nice_yaml() | indent(4) }}
    {{ deluge_web.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{ deluge_web.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ deluge_web.labels_def | to_nice_yaml() | indent(8) }}
        {{ deluge_web.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      initContainers:
      - name: create-folders
        image: "{{ busybox.container.image }}"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /opt/deluge/config
            chown -R 1000:1000 /opt/deluge/config
        volumeMounts:
        - name: deluge-data
          mountPath: /opt/deluge
      containers:
      - name: deluge-web
        image: "{{ deluge_web.container.image }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 8112
          name: webui
        env:
        - name: "DELUGE_CONF_WEB_DEFAULT_DAEMON"
          value: "deluge-daemon"
        - name: "DELUGE_CONF_WEB_PORT"
          value: "8112"
        - name: "DELUGE_CONF_WEB_HTTPS"
          value: "false"
        - name: "DELUGE_CONF_WEB_BASE"
          value: "{{ '/' if deluge_web.context_root == '' else deluge_web.context_root }}"
        - name: "DELUGE_WEB_PASSWORD"
          value: "{{ deluge_web.password }}"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000 # deluge
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: {{ '/' if deluge_web.context_root == '' else deluge_web.context_root }}
            port: webui
          initialDelaySeconds: 3
          periodSeconds: 10
        resources:
          requests:
            cpu: "{{ deluge_web.container.requests_cpu }}"
            memory: "{{ deluge_web.container.requests_memory }}"
          limits:
            cpu: "{{ deluge_web.container.limits_cpu }}"
            memory: "{{ deluge_web.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: deluge-data
          mountPath: /home/deluge/.config/deluge
          subPath: config
        - name: deluge-secret
          mountPath: /home/deluge/.config/deluge/auth
          subPath: auth
        - name: deluge-secret
          mountPath: /home/deluge/.config/deluge/hostlist.conf
          subPath: hostlist.conf
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: deluge-data
        persistentVolumeClaim:
          claimName: deluge-data-pv-claim
      - name: deluge-secret
        secret:
          secretName: deluge-secret
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
