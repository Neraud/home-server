---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: {{ kubernetes_metrics_server.namespace }}
  labels:
    {{ kubernetes_metrics_server.labels_def | to_nice_yaml() | indent(4) }}
    {{ kubernetes_metrics_server.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  selector:
    matchLabels:
      {{ kubernetes_metrics_server.labels_def | to_nice_yaml() | indent(6) }}
  template:
    metadata:
      name: metrics-server
      labels:
        {{ kubernetes_metrics_server.labels_def | to_nice_yaml() | indent(8) }}
        {{ kubernetes_metrics_server.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      serviceAccountName: metrics-server
      volumes:
      # mount in tmp so we can safely use from-scratch images and/or read-only containers
      - name: tmp-dir
        emptyDir: {}
      containers:
      - name: metrics-server
        image: "{{ kubernetes_metrics_server.container.image }}"
        imagePullPolicy: Always
        args:
        - --cert-dir=/tmp
        - --secure-port=4443
        # TODO : Fix kubelet serving certificate and remove this insecure flag
        # See https://github.com/kubernetes/kubeadm/issues/1223
        - --kubelet-insecure-tls=true
        ports:
        - name: main-port
          containerPort: 4443
          protocol: TCP
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: main-port
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            cpu: "{{ kubernetes_metrics_server.container.requests_cpu }}"
            memory: "{{ kubernetes_metrics_server.container.requests_memory }}"
          limits:
            cpu: "{{ kubernetes_metrics_server.container.limits_cpu }}"
            memory: "{{ kubernetes_metrics_server.container.limits_memory }}"
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
      nodeSelector:
        beta.kubernetes.io/os: linux
        capability/general-purpose: 'yes'
