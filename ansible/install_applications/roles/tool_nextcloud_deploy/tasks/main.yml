---
- name: Ensure Nextcloud namespace exists
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/custom-namespace.yml
  vars:
    application_namespace: "{{ nextcloud.namespace }}"
    create_nfs_pvc: [ nfs-nextcloud ]

- name: Deploy Nextcloud backup script
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/backup.yml
  vars:
    app_backup: "{{ nextcloud.app_backup }}"
  tags: backup

- name: Deploy Nextcloud MySQL backup script
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/backup.yml
  vars:
    app_backup: "{{ nextcloud_mysql.app_backup }}"
  tags: backup

- name: Ensure BusyBox image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ busybox.base_image }}"
    private_image: "{{ busybox.private_image }}"

- name: Ensure Nextcloud image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ nextcloud.base_image }}"
    private_image: "{{ nextcloud.private_image }}"
    build: yes
    build_args:
      app_breezedark_repo: "{{ nextcloud.applications.breezedark.repo }}"
      app_breezedark_version: "{{ nextcloud.applications.breezedark.version }}"
      app_calendar_repo: "{{ nextcloud.applications.calendar.repo }}"
      app_calendar_version: "{{ nextcloud.applications.calendar.version }}"
      app_contacts_repo: "{{ nextcloud.applications.contacts.repo }}"
      app_contacts_version: "{{ nextcloud.applications.contacts.version }}"
      app_notes_repo: "{{ nextcloud.applications.notes.repo }}"
      app_notes_version: "{{ nextcloud.applications.notes.version }}"
      app_tasks_repo: "{{ nextcloud.applications.tasks.repo }}"
      app_tasks_version: "{{ nextcloud.applications.tasks.version }}"
      app_twofactor_totp_repo: "{{ nextcloud.applications.twofactor_totp.repo }}"
      app_twofactor_totp_version: "{{ nextcloud.applications.twofactor_totp.version }}"

- name: Ensure Nextcloud MySQL image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ nextcloud_mysql.base_image }}"
    private_image: "{{ nextcloud_mysql.private_image }}"

- name: Ensure Nextcloud Redis image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    base_image: "{{ nextcloud_redis.base_image }}"
    private_image: "{{ nextcloud_redis.private_image }}"

- name: Clone caldav-recurring-task-scheduler repo
  ansible.builtin.git:
    dest: "{{ nextcloud_task_rescheduler.path }}"
    repo: "{{ nextcloud_task_rescheduler.repo.url }}"
    version: "{{ nextcloud_task_rescheduler.repo.version }}"

- name: Ensure caldav-recurring-task-scheduler image is up-to-date in the private registry
  ansible.builtin.import_tasks: ../../app_base_deploy/tasks/container-image-private-registry.yml
  vars:
    # base_image is not used for this particular app, but the variable is expected, we use private_image to avoid the "undefined variable" error
    base_image: "{{ nextcloud_task_rescheduler.private_image }}"  
    private_image: "{{ nextcloud_task_rescheduler.private_image }}"
    build: yes
    build_path: "{{ nextcloud_task_rescheduler.path }}"

- name: Deploy Nextcloud
  kubernetes.core.k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubeconfig_context }}"
  with_fileglob:
    - "{{ role_path }}/app/deploy/*.yaml*"
