---
- name: Ensure Fluentd namespace exists
  import_tasks: ../../_base.deploy/tasks/custom-namespace.yml
  vars:
    application_namespace: "{{ fluentd.namespace }}"

- name: Ensure Fluentd image is up-to-date in the private registry
  import_tasks: ../../_base.deploy/tasks/docker-image-private-registry.yml
  vars:
    base_image: "{{ fluentd.base_image }}"
    private_image: "{{ fluentd.container.image }}"
    build: yes
    build_args:
      fluent_plugin_elasticsearch_version: "{{ fluentd.plugins.elasticsearch.version }}"
      fluent_plugin_prometheus_version: "{{ fluentd.plugins.prometheus.version }}"
      fluent_plugin_ua_parser_version: "{{ fluentd.plugins.ua_parser.version }}"
      fluent_plugin_uap_core_version: "{{ fluentd.plugins.uap_core.version }}"
      fluent_plugin_geoip_version: "{{ fluentd.plugins.geoip.version }}"

- name: Read certificate files
  slurp:
    src: "{{ item }}"
  register: fluentd_generated_certificate_files
  with_items:
    - "{{ custom_ssl_pki_generation_root_dir }}/cluster/ca.crt"
    - "{{ custom_ssl_pki_generation_root_dir }}/cluster/fluentd/server.crt"
    - "{{ custom_ssl_pki_generation_root_dir }}/cluster/fluentd/server.key"

- name: List included config files
  set_fact:
    fluentd_included_config_files: "{{ fluentd_included_config_files | default([]) + [ item ] }}"
  with_fileglob:
    - "{{ role_path }}/app/config/includes/*.conf"

- name: Deploy Fluentd
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubeconfig_context }}"
  with_fileglob:
    - "{{ role_path }}/app/deploy/*.yaml*"
