apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unifi
  namespace: {{ unifi.namespace }}
  labels:
    {{ unifi.labels_def | to_nice_yaml() | indent(4) }}
    {{ unifi.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Cluster Management
    gethomepage.dev/name: UniFi
    gethomepage.dev/description: Controller for Unifi devices
    gethomepage.dev/icon: unifi
    gethomepage.dev/pod-selector: "app.kubernetes.io/name=unifi"
{% if homepage.config.unifi.enabled %}
    # https://gethomepage.dev/en/services/unifi-controller/
    gethomepage.dev/widget.type: "unifi"
    gethomepage.dev/widget.url: "https://unifi-frontend.infra-unifi.svc.cluster.local:443"
    gethomepage.dev/widget.fields: '["uptime", "wan", "lan_users", "wlan_users"]'
    gethomepage.dev/widget.username: "{{ homepage.config.unifi.username }}"
    gethomepage.dev/widget.password: "{{ homepage.config.unifi.password }}"
{% endif %}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - unifi.infra.intra.{{ web_base_domain }}
      secretName: ingress-tls
  rules:
  - host: unifi.infra.intra.{{ web_base_domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unifi-frontend
            port:
              name: https-crtl
