apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgsql
  namespace: {{ paperless.namespace }}
  labels:
    {{ paperless_pgsql.labels_def | to_nice_yaml() | indent(4) }}
    {{ paperless_pgsql.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{ paperless_pgsql.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ paperless_pgsql.labels_def | to_nice_yaml() | indent(8) }}
        {{ paperless_pgsql.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      initContainers:
      - name: create-folders
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            rm -Rf /var/lib/postgresql/data
            mkdir -p /var/lib/postgresql/data
            chown -R 70:70 /var/lib/postgresql/data
        volumeMounts:
        - name: pgsql-pv-claim
          mountPath: /var/lib/postgresql
      containers:
      - name: pgsql
        image: "{{ paperless_pgsql.private_image | image_full_name }}"
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          value: {{ paperless_pgsql.user }}
        - name: POSTGRES_DB
          value: {{ paperless_pgsql.database }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgsql
              key: password
        ports:
        - containerPort: 5432
          name: pgsql
        securityContext:
          runAsNonRoot: true
          runAsUser: 70 # postgres
          readOnlyRootFilesystem: true
        readinessProbe:
           exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ paperless_pgsql.user }} -d {{ paperless_pgsql.database }} -h 127.0.0.1
        resources:
          requests:
            cpu: "{{ paperless_pgsql.container.requests_cpu }}"
            memory: "{{ paperless_pgsql.container.requests_memory }}"
          limits:
            cpu: "{{ paperless_pgsql.container.limits_cpu }}"
            memory: "{{ paperless_pgsql.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: pgsql-pv-claim
          mountPath: /var/lib/postgresql/data
          subPath: data
        - name: pgsql-init
          mountPath: /docker-entrypoint-initdb.d/
        - name: run-volume
          mountPath: /var/run/postgresql/
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: pgsql-init
        configMap:
          name: pgsql-init
      - name: run-volume
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: pgsql-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_longhorn_high_durability_storage_class_name }}
      resources:
        requests:
          storage: {{ paperless_pgsql.container.storage.data }}
