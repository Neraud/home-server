apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openldap
  namespace: {{ openldap.namespace }}
  labels:
    {{ openldap.labels_def | to_nice_yaml() | indent(4) }}
    {{ openldap.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ openldap.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ openldap.labels_def | to_nice_yaml() | indent(8) }}
        {{ openldap.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - name: openldap
        image: "{{ openldap.private_image | image_full_name }}"
        imagePullPolicy: Always
        args: ["--copy-service"]
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: openldap-data-pv-claim
          mountPath: /var/lib/ldap
        - name: openldap-config-pv-claim
          mountPath: /etc/ldap/slapd.d
        - name: config-volume
          mountPath: /container/environment/01-custom
        - name: certs-volume
          mountPath: /container/service/slapd/assets/certs
        - name: openldap-run-pv-claim
          mountPath: /container/run
        ports:
        - containerPort: 389
          name: ldap
        - containerPort: 636
          name: ldaps
        securityContext:
          # See README.MD for details
          #runAsNonRoot: true
          #runAsUser: 999 # openldap
          #runAsGroup: 999 # openldap
          #readOnlyRootFilesystem: true
        readinessProbe:
          tcpSocket:
            port: ldap
          initialDelaySeconds: 60
          periodSeconds: 5
        resources:
          requests:
            cpu: "{{ openldap.container.requests_cpu }}"
            memory: "{{ openldap.container.requests_memory }}"
          limits:
            cpu: "{{ openldap.container.limits_cpu }}"
            memory: "{{ openldap.container.limits_memory }}"
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: config-volume
        secret:
          secretName: openldap-config
      - name: certs-volume
        secret:
          secretName: openldap-certs
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: openldap-data-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: {{ openldap.container.storage.data }}
      selector:
        matchLabels:
          {{ openldap.labels_def | to_nice_yaml() | indent(10) }}
          storage: data
  - metadata:
      name: openldap-config-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: {{ openldap.container.storage.config }}
      selector:
        matchLabels:
          {{ openldap.labels_def | to_nice_yaml() | indent(10) }}
          storage: config
  - metadata:
      name: openldap-run-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: {{ openldap.container.storage.run }}
      selector:
        matchLabels:
          {{ openldap.labels_def | to_nice_yaml() | indent(10) }}
          storage: run
