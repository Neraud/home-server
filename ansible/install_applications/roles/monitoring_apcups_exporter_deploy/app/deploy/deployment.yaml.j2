apiVersion: apps/v1
kind: Deployment
metadata:
  name: apcups-exporter
  namespace: {{ apcups_exporter.namespace }}
  labels:
    {{ apcups_exporter.labels_def | to_nice_yaml() | indent(4) }}
    {{ apcups_exporter.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  selector:
    matchLabels:
      {{ apcups_exporter.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ apcups_exporter.labels_def | to_nice_yaml() | indent(8) }}
        {{ apcups_exporter.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - name: apcups-exporter
        image: "{{ apcups_exporter.container.image }}"
        imagePullPolicy: Always
        env:
        - name: APCUPS_ADDR
          value: apcupsd.monitoring-apcups-exporter:3551
        ports:
        - containerPort: 9162
          name: metrics
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000 # random UID
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: metrics
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: "{{ apcups_exporter.container.requests_cpu }}"
            memory: "{{ apcups_exporter.container.requests_memory }}"
          limits:
            cpu: "{{ apcups_exporter.container.limits_cpu }}"
            memory: "{{ apcups_exporter.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
