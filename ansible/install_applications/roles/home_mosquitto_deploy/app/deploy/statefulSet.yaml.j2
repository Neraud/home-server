apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mosquitto
  namespace: {{ mosquitto.namespace }}
  labels:
    {{ mosquitto.labels_def | to_nice_yaml() | indent(4) }}
    {{ mosquitto.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{ mosquitto.labels_def | to_nice_yaml() | indent(6) }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ mosquitto.labels_def | to_nice_yaml() | indent(8) }}
        {{ mosquitto.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      initContainers:
      - name: create-folders
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /mosquitto/data
            chown -R 1883:1883 /mosquitto
        volumeMounts:
        - name: mosquitto-data-pv-claim
          mountPath: /mosquitto
      containers:
      - name: mosquitto
        image: "{{ mosquitto.private_image | image_full_name }}"
        imagePullPolicy: Always        
        ports:
        - containerPort: 1883
          name: mqtt
        - containerPort: 8883
          name: mqtts
        securityContext:
          runAsNonRoot: true
          runAsUser: 1883 # mosquitto
          readOnlyRootFilesystem: true
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - mosquitto_sub {% if mosquitto.healthcheck_credential %}-u {{ mosquitto.healthcheck_credential.user }} -P {{ mosquitto.healthcheck_credential.password }}{% endif %} -t '$SYS/broker/uptime' -C 1 | grep second
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: "{{ mosquitto.container.requests_cpu }}"
            memory: "{{ mosquitto.container.requests_memory }}"
          limits:
            cpu: "{{ mosquitto.container.limits_cpu }}"
            memory: "{{ mosquitto.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: mosquitto-config
          mountPath: /mosquitto/config
        - name: certs-volume
          mountPath: /etc/ssl/mqtt
        - name: mosquitto-data-pv-claim
          mountPath: /mosquitto/data
          subPath: data
      securityContext:
        fsGroup: 1883 # mosquitto group inside the container
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: mosquitto-config
        configMap:
          name: mosquitto-config
      - name: certs-volume
        secret:
          secretName: mosquitto-certs
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: mosquitto-data-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: {{ mosquitto.container.storage.data }}
      selector:
        matchLabels:
          {{ mosquitto.labels_def | to_nice_yaml() | indent(10) }}
          storage: data
