apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: {{ kube_state_metrics.namespace }}
  labels:
    {{ kube_state_metrics.labels_def | to_nice_yaml() | indent(4) }}
    {{ kube_state_metrics.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ kube_state_metrics.labels_def | to_nice_yaml() | indent(6) }}
  template:
    metadata:
      labels:
        {{ kube_state_metrics.labels_def | to_nice_yaml() | indent(8) }}
        {{ kube_state_metrics.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - args:
        - --host=127.0.0.1
        - --port=8081
        - --telemetry-host=127.0.0.1
        - --telemetry-port=8082
        image: "{{ kube_state_metrics.container.image }}"
        imagePullPolicy: Always
        name: kube-state-metrics
        securityContext:
          runAsUser: 65534
          readOnlyRootFilesystem: true
        #readinessProbe:
        # As we bind to 127.0.0.1, we can't add probes to this container
        resources:
          requests:
            cpu: "{{ kube_state_metrics.container.requests_cpu }}"
            memory: "{{ kube_state_metrics.container.requests_memory }}"
          limits:
            cpu: "{{ kube_state_metrics.container.limits_cpu }}"
            memory: "{{ kube_state_metrics.container.limits_memory }}"
      - args:
        - --logtostderr
        - --secure-listen-address=:8443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:8081/
        image: "{{ kube_state_metrics_rbac_proxy.container.image }}"
        imagePullPolicy: Always
        name: kube-rbac-proxy-main
        ports:
        - containerPort: 8443
          name: https-main
#        readinessProbe:
#          # We can't use httpGet -> we'll get a 401 and the probe will think it's down
#          # We can't use a tcpSocket -> it floods the logs with "TLS handshake error from ...: EOF"
#          # We can't use wget on an SSL endpoint, it leaks ssl_client defunct processes
#          exec:
#            command:
#            - /bin/sh
#            - -c 
#            - "test \"$(wget --server-response --spider --quiet --no-check-certificate https://127.0.0.1:8443/ 2>&1 | awk 'NR==1 {print $2}')\" == \"401\""
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          runAsUser: 65534
          readOnlyRootFilesystem: true
        resources:
          limits:
            cpu: {{ kube_state_metrics_rbac_proxy.container.limits_cpu }}
            memory: {{ kube_state_metrics_rbac_proxy.container.limits_memory }}
          requests:
            cpu: {{ kube_state_metrics_rbac_proxy.container.requests_cpu }}
            memory: {{ kube_state_metrics_rbac_proxy.container.requests_memory }}
      - args:
        - --logtostderr
        - --secure-listen-address=:9443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:8082/
        image: "{{ kube_state_metrics_rbac_proxy.container.image }}"
        imagePullPolicy: Always
        name: kube-rbac-proxy-self
        ports:
        - containerPort: 9443
          name: https-self
#        readinessProbe:
#          # We can't use httpGet -> we'll get a 401 and the probe will think it's down
#          # We can't use a tcpSocket -> it floods the logs with "TLS handshake error from ...: EOF"
#          # We can't use wget on an SSL endpoint, it leaks ssl_client defunct processes
#          exec:
#            command:
#            - /bin/sh
#            - -c 
#            - "test \"$(wget --server-response --spider --quiet --no-check-certificate https://127.0.0.1:9443/ 2>&1 | awk 'NR==1 {print $2}')\" == \"401\""
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          runAsUser: 65534
          readOnlyRootFilesystem: true
        resources:
          limits:
            cpu: {{ kube_state_metrics_rbac_proxy.container.limits_cpu }}
            memory: {{ kube_state_metrics_rbac_proxy.container.limits_memory }}
          requests:
            cpu: {{ kube_state_metrics_rbac_proxy.container.requests_cpu }}
            memory: {{ kube_state_metrics_rbac_proxy.container.requests_memory }}
      nodeSelector:
        kubernetes.io/os: linux
        capability/general-purpose: 'yes'
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kube-state-metrics
