#!/usr/bin/env python3
import urllib.request
import json
import re
import os
import shutil
from base64 import b64encode

kibana_root_url = "http://127.0.0.1:{{ kubernetes_ingress_http_port }}{{ kibana.context_path }}"
output_dir = "{{ kibana.export_saved.output_dir }}"

headers = {
    "Host": "infra.{{ web_base_domain }}",
    "Authorization": "Basic %s" % b64encode(b"{{ kibana.elasticsearch.user }}:{{ kibana.elasticsearch.password }}").decode("ascii")
}

types = ["visualization", "dashboard", "search", "index-pattern", "timelion-sheet"]

shutil.rmtree(output_dir, True)
os.makedirs(output_dir)

def saveType(type):
    print("Listing " + type)
    request = urllib.request.Request(kibana_root_url + "/api/saved_objects/_find?type=" + type + "&per_page=100", headers=headers)
    with urllib.request.urlopen(request) as response:
        data = json.loads(response.read().decode())
        for savedObject in data['saved_objects']:
            title = savedObject['attributes']['title']
            print(" - " + title)
            cleanedTitle = re.sub(r'\W+', '-', title)
            cleanedTitle = re.sub(r'^-', '', cleanedTitle)
            cleanedTitle = re.sub(r'-$', '', cleanedTitle)
            fileName = type + '_' + cleanedTitle + ".json"
            exportString = json.dumps(savedObject, sort_keys=True, indent=4, separators=(',', ': '))
            f = open(output_dir + "/" + fileName, "w")
            f.write(exportString)

for type in types:
    saveType(type)
