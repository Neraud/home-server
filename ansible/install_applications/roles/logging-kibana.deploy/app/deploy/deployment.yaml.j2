apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ kibana.namespace }}
  labels:
    {{ kibana.labels_def | to_nice_yaml() | indent(4) }}
    {{ kibana.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ kibana.labels_def | to_nice_yaml() | indent(6) }}
  template:
    metadata:
      labels:
        {{ kibana.labels_def | to_nice_yaml() | indent(8) }}
        {{ kibana.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - name: kibana
        image: "{{ kibana.container.image }}"
        resources:
          requests:
            cpu: "{{ kibana.container.requests_cpu }}"
            memory: "{{ kibana.container.requests_memory }}"
          limits:
            cpu: "{{ kibana.container.limits_cpu }}"
            memory: "{{ kibana.container.limits_memory }}"
        env:
        - name: NODE_OPTIONS
          value: "--max-old-space-size={{ kibana.nodejs_max_memory }}"
        ports:
        - name: http
          containerPort: 5601
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: kibana-config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: kibana-config
        configMap:
          name: kibana
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      nodeSelector:
        capability/general-purpose: 'yes'
