---

- name: Deploy Gotify
  k8s:
    definition: "{{ lookup(item | regex_search('.j2$') | ternary('template','file'), item) }}"
    state: present
  with_fileglob:
    - "{{ role_path }}/app/deploy/*.yaml*"
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Wait for Gotify to be available
  uri:
    url: "https://127.0.0.1:{{ kubernetes_ingress_https_port }}/gotify/version"
    method: GET
    headers:
      Host: "infra.{{ web_base_domain }}"
    return_content: no
    validate_certs: no
  register: gotify_available
  until:
  - gotify_available.status == 200
  retries: 18
  delay: 10

- name: List existing users
  uri:
    url: "https://127.0.0.1:{{ kubernetes_ingress_https_port }}/gotify/user"
    method: GET
    headers:
      Host: "infra.{{ web_base_domain }}"
    return_content: yes
    validate_certs: no
    force_basic_auth: yes
    user: "{{ gotify.default_admin_user }}"
    password: "{{ gotify.default_admin_password }}"
  register: gotify_existing_users

- name: Create missing users
  uri:
    url: "https://127.0.0.1:{{ kubernetes_ingress_https_port }}/gotify/user"
    method: POST
    headers:
      Host: "infra.{{ web_base_domain }}"
    body:
      name: "{{ item.name }}"
      pass: "{{ item.password }}"
      admin: "{{ item.admin }}"
    body_format: json
    return_content: yes
    validate_certs: no
    force_basic_auth: yes
    user: "{{ gotify.default_admin_user }}"
    password: "{{ gotify.default_admin_password }}"
  with_items: "{{ gotify.users }}"
  when: item.name not in (gotify_existing_users.json | map(attribute='name'))

- name: List existing applications
  uri:
    url: "https://127.0.0.1:{{ kubernetes_ingress_https_port }}/gotify/application"
    method: GET
    headers:
      Host: "infra.{{ web_base_domain }}"
    return_content: yes
    validate_certs: no
    force_basic_auth: yes
    user: "{{ item.name }}"
    password: "{{ item.password }}"
  with_items: "{{ gotify.users }}"
  register: gotify_existing_applications

- name: Clean existing application list
  set_fact:
    gotify_existing_applications_cleaned: "{{ gotify_existing_applications_cleaned | default({}) | combine( { item.item.name: item.json } ) }}"
  with_items: "{{ gotify_existing_applications.results }}"

- name: Create missing applications
  uri:
    url: "https://127.0.0.1:{{ kubernetes_ingress_https_port }}/gotify/application"
    method: POST
    headers:
      Host: "infra.{{ web_base_domain }}"
    body:
      name: "{{ item.1.name }}"
      description: "{{ item.1.desc }}"
    body_format: json
    return_content: yes
    validate_certs: no
    force_basic_auth: yes
    user: "{{ item.0.name }}"
    password: "{{ item.0.password }}"
  loop: "{{ gotify.users | subelements('applications') }}"
  when: item.1.name not in (gotify_existing_applications_cleaned[item.0.name] | map(attribute='name'))
