---
- name: "[{{ policy_item.policy_id }}] Get current index policy"
  ansible.builtin.uri:
    url: "https://{{ kubernetes_nginx_ingress_lb_ip }}:{{ kubernetes_ingress_https_port }}{{ elasticsearch.context_root }}/_plugins/_ism/policies/{{ policy_item.policy_id }}"
    method: GET
    headers:
      Host: "elasticsearch.log.intra.{{ web_base_domain }}"
    validate_certs: no
    status_code: [200, 404]
    force_basic_auth: yes
    user: "{{ elasticsearch.admin_user.user }}"
    password: "{{ elasticsearch.admin_user.password }}"
  register: current_ism_policy

- name: "[{{ policy_item.policy_id }}] Create index policy"
  ansible.builtin.uri:
    url: "https://{{ kubernetes_nginx_ingress_lb_ip }}:{{ kubernetes_ingress_https_port }}{{ elasticsearch.context_root }}/_plugins/_ism/policies/{{ policy_item.policy_id }}"
    method: PUT
    headers:
      Host: "elasticsearch.log.intra.{{ web_base_domain }}"
    body:
      policy: "{{ policy_item }}"
    body_format: json
    validate_certs: no
    status_code: [201]
    force_basic_auth: yes
    user: "{{ elasticsearch.admin_user.user }}"
    password: "{{ elasticsearch.admin_user.password }}"
  changed_when: True
  when: current_ism_policy.status == 404

- name: "[{{ policy_item.policy_id }}] Update index policy if necessary"
  block:
    - name: "[{{ policy_item.policy_id }}] Filter fields from policies"
      ansible.builtin.set_fact:
        current_ism_policy_filtered: "{{ current_ism_policy.json.policy | ansible.utils.remove_keys(target=removed_keys) }}"
        policy_item_filtered: "{{ policy_item | ansible.utils.remove_keys(target=removed_keys) }}"
      vars:
        removed_keys: ['error_notification', 'last_updated_time', 'schema_version']

    - name: "[{{ policy_item.policy_id }}] Update index policy"
      ansible.builtin.uri:
        url: "https://{{ kubernetes_nginx_ingress_lb_ip }}:{{ kubernetes_ingress_https_port }}{{ elasticsearch.context_root }}/_plugins/_ism/policies/{{ policy_item.policy_id }}?if_seq_no={{ current_ism_policy.json._seq_no }}&if_primary_term={{ current_ism_policy.json._primary_term }}"
        method: PUT
        headers:
          Host: "elasticsearch.log.intra.{{ web_base_domain }}"
        body:
          policy: "{{ policy_item }}"
        body_format: json
        validate_certs: no
        status_code: [200]
        force_basic_auth: yes
        user: "{{ elasticsearch.admin_user.user }}"
        password: "{{ elasticsearch.admin_user.password }}"
      changed_when: True
      when: current_ism_policy_filtered != policy_item_filtered
  when: current_ism_policy.status != 404
