apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: {{ elasticsearch.namespace }}
  labels:
    {{ elasticsearch.labels_def | to_nice_yaml() | indent(4) }}
    {{ elasticsearch.labels_desc | to_nice_yaml() | indent(4) }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  serviceName: elasticsearch
  replicas: {{ elasticsearch.replicas }}
  selector:
    matchLabels:
      {{ elasticsearch.labels_def | to_nice_yaml() | indent(6) }}
  template:
    metadata:
      labels:
        {{ elasticsearch.labels_def | to_nice_yaml() | indent(8) }}
        {{ elasticsearch.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - name: elasticsearch
        image: "{{ elasticsearch.private_image | image_full_name }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 9300
          name: transport
        - containerPort: 9200
          name: web
        - containerPort: 9600
          name: metrics
        securityContext:
          # TODO : elasticsearch requires to run as root for now :/
          #runAsNonRoot: true
          #runAsUser: 1000
          #readOnlyRootFilesystem: true
          capabilities:
            add: ["SYS_CHROOT"]
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
          requests:
            cpu: "{{ elasticsearch.container.requests_cpu }}"
            memory: "{{ elasticsearch.container.requests_memory }}"
          limits:
            cpu: "{{ elasticsearch.container.limits_cpu }}"
            memory: "{{ elasticsearch.container.limits_memory }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: elasticsearch-pv-claim
          mountPath: /usr/share/opensearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
        - name: elasticsearch-security
          mountPath: /usr/share/opensearch/plugins/opensearch-security/securityconfig
        - name: certs-volume
          mountPath: /usr/share/opensearch/config/certs
        - name: cluster-ca-volume
          mountPath: /usr/share/opensearch/plugins/opensearch-security/cluster/ca.crt
          subPath: ca.crt
        env:
          - name: cluster.name
            value: {{ elasticsearch.cluster_name }}
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: node.roles
            value: "master,data,ingest"
          - name: discovery.seed_hosts
            value: "{% for i in range(0, elasticsearch.replicas|int) %}{% if i > 0 %},{% endif %}elasticsearch-{{ i }}{% endfor %}"
          - name: cluster.initial_master_nodes
            value: "{% for i in range(0, elasticsearch.replicas|int) %}{% if i > 0 %},{% endif %}elasticsearch-{{ i }}{% endfor %}"
          - name: discovery.zen.minimum_master_nodes
            value: "{{ (elasticsearch.replicas|int / 2 + 1) | int }}"
          - name: PROCESSORS
            valueFrom:
              resourceFieldRef:
                resource: limits.cpu
          - name: OPENSEARCH_JAVA_OPTS
            value: "-Xms{{ elasticsearch.max_java_memory }} -Xmx{{ elasticsearch.max_java_memory }}"
      initContainers:
      - name: fix-permissions
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/opensearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: elasticsearch-pv-claim
          mountPath: /usr/share/opensearch/data
      - name: increase-vm-max-map
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: "{{ busybox.private_image | image_full_name }}"
        imagePullPolicy: Always
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
      - name: elasticsearch-security
        configMap:
          name: elasticsearch-security
      - name: certs-volume
        secret:
          secretName: elasticsearch-certs
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_local_lvm_storage_class_name }}
      resources:
        requests:
          storage: 4G
      selector:
        matchLabels:
          {{ elasticsearch.labels_def | to_nice_yaml() | indent(10) }}
