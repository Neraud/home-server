apiVersion: apps/v1
kind: Deployment
metadata:
  name: blackbox-exporter
  namespace: {{ blackbox_exporter.namespace }}
  labels:
    {{ blackbox_exporter.labels_def | to_nice_yaml() | indent(4) }}
    {{ blackbox_exporter.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ blackbox_exporter.labels_def | to_nice_yaml() | indent(6) }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: blackbox-exporter
      labels:
        {{ blackbox_exporter.labels_def | to_nice_yaml() | indent(8) }}
        {{ blackbox_exporter.labels_desc | to_nice_yaml() | indent(8) }}
    spec:
      containers:
      - args:
        - --config.file=/etc/blackbox_exporter/config.yml
        - --web.listen-address=:19115
        image: "{{ blackbox_exporter.private_image | image_full_name }}"
        name: blackbox-exporter
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        ports:
        - containerPort: 19115
          name: http
        resources:
          limits:
            cpu: {{ blackbox_exporter.container.limits_cpu }}
            memory: {{ blackbox_exporter.container.limits_memory }}
          requests:
            cpu: {{ blackbox_exporter.container.requests_cpu }}
            memory: {{ blackbox_exporter.container.requests_memory }}
        securityContext:
{% if blackbox_exporter.enable_icmp_module %}
          capabilities:
            add:
            - NET_RAW
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: false
{% else %}
          runAsNonRoot: true
          runAsUser: 65534
{% endif %}
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/blackbox_exporter/
          name: config
          readOnly: true
      - args:
        - --webhook-url=http://localhost:19115/-/reload
        - --volume-dir=/etc/blackbox_exporter/
        image: "{{ blackbox_exporter_configmap_reload.private_image | image_full_name }}"
        name: module-configmap-reloader
        resources:
          limits:
            cpu: {{ blackbox_exporter_configmap_reload.container.limits_cpu }}
            memory: {{ blackbox_exporter_configmap_reload.container.limits_memory }}
          requests:
            cpu: {{ blackbox_exporter_configmap_reload.container.requests_cpu }}
            memory: {{ blackbox_exporter_configmap_reload.container.requests_memory }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/blackbox_exporter/
          name: config
          readOnly: true
      - args:
        - --logtostderr
        - --secure-listen-address=:9115
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:19115/
        image: "{{ blackbox_exporter_rbac_proxy.private_image | image_full_name }}"
        imagePullPolicy: Always
        name: kube-rbac-proxy
        ports:
        - containerPort: 9115
          name: https
        #readinessProbe:
        #  # We can't use httpGet -> we'll get a 401 and the probe will think it's down
        #  # We can't use tcpSocket -> it floods the logs with "TLS handshake error from ...: EOF"
        #  # We can't use exec -> it randomly fails with an issue to find /bin/sh (which indeed isn't in the container)"
        #  exec:
        #    command:
        #    - /bin/sh
        #    - -c 
        #    - "test \"$(wget --server-response --spider --quiet --no-check-certificate https://$IP:9100/ 2>&1 | awk 'NR==1 {print $2}')\" == \"401\""
        resources:
          limits:
            cpu: {{ blackbox_exporter_rbac_proxy.container.limits_cpu }}
            memory: {{ blackbox_exporter_rbac_proxy.container.limits_memory }}
          requests:
            cpu: {{ blackbox_exporter_rbac_proxy.container.requests_cpu }}
            memory: {{ blackbox_exporter_rbac_proxy.container.requests_memory }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          readOnlyRootFilesystem: true
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        kubernetes.io/os: linux
        capability/general-purpose: 'yes'
      serviceAccountName: blackbox-exporter
      volumes:
      - configMap:
          name: blackbox-exporter-configuration
        name: config
