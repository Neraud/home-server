apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: gandi-livedns
  namespace: {{ gandi_livedns.namespace }}
  labels:
    {{ gandi_livedns.labels_def | to_nice_yaml() | indent(4) }}
    {{ gandi_livedns.labels_desc | to_nice_yaml() | indent(4) }}
spec:
  schedule: "{{ gandi_livedns.cron }}"
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{ gandi_livedns.labels_def | to_nice_yaml() | indent(12) }}
            {{ gandi_livedns.labels_desc | to_nice_yaml() | indent(12) }}
        spec:
          restartPolicy: Never
          containers:
          - name: gandi-livedns
            image: "{{ gandi_livedns.container.image }}"
            imagePullPolicy: Always
            env:
            - name: REFRESH_INTERVAL
              value: "0"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: gandi-livedns
                  key: APIKEY
            - name: DOMAIN
              valueFrom:
                secretKeyRef:
                  name: gandi-livedns
                  key: DOMAIN
            - name: RECORD_LIST
              valueFrom:
                secretKeyRef:
                  name: gandi-livedns
                  key: RECORD_LIST
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000 # gandi
              runAsGroup: 1000 # gandi
              readOnlyRootFilesystem: true
            resources:
              requests:
                cpu: "{{ gandi_livedns.container.requests_cpu }}"
                memory: "{{ gandi_livedns.container.requests_memory }}"
              limits:
                cpu: "{{ gandi_livedns.container.limits_cpu }}"
                memory: "{{ gandi_livedns.container.limits_memory }}"
            volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
              readOnly: true
          volumes:
          - name: tz-config
            hostPath:
              path: /etc/localtime
          imagePullSecrets:
          - name: docker-config
          nodeSelector:
            capability/general-purpose: 'yes'
    