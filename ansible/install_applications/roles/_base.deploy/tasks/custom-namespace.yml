---

# This set of tasks is meant to be imported in each [app].deploy role
# It ensures the application namespace is properly created, and populates with the default ConfigMap / Secrets.

# Usage : 
#- name: Ensure app_name namespace exists
#  import_tasks: ../../_base.deploy/tasks/custom-namespace.yml
#  vars:
#    application_namespace: namespace_name

- name: Create application namespace {{ application_namespace }}
  k8s:
    definition: "{{ lookup('template', role_path + '/../_base.deploy/templates/namespace/namespace.yaml.j2') }}"
    state: present
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Read the cluster CA file
  slurp:
    src: "{{ custom_ssl_pki_root_dir }}/cluster/ca.crt"
  register: cluster_ca_file

- name: Expose the cluster CA
  k8s:
    definition: "{{ lookup('template', role_path + '/../_base.deploy/templates/namespace/cluster-ca-secret.yaml.j2') }}"
    state: present
  become: yes
  become_user: "{{ kubernetes_user.name }}"

# TODO : Try to find a way to avoid injecting the ingress cert and private key in all namespaces
# See : https://github.com/kubernetes/ingress-nginx/issues/2170 and https://github.com/kubernetes/ingress-nginx/issues/2371 
- name: Read the ingress TLS cert
  slurp:
    src: "{{ custom_ssl_pki_root_dir }}/cluster/ingress/server.crt"
  register: ingress_tls_cert_file

- name: Read the ingress TLS key
  slurp:
    src: "{{ custom_ssl_pki_root_dir }}/cluster/ingress/server.key"
  register: ingress_tls_key_file

- name: Deploy TLS secret
  k8s:
    definition: "{{ lookup('template', role_path + '/../_base.deploy/templates/namespace/tls-secret.yaml.j2') }}"
    state: present
  become: yes
  become_user: "{{ kubernetes_user.name }}"

- name: Create GlusterFS endpoint and service
  k8s:
    definition: "{{ lookup('template', role_path + '/../_base.deploy/templates/namespace/' + item) }}"
    state: present
  with_items:
    - glusterfs-endpoint.yaml.j2
    - glusterfs-service.yaml.j2
  become: yes
  become_user: "{{ kubernetes_user.name }}"
