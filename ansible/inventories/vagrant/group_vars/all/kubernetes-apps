---

# TODO Unifi private services exposed XXX
unifi_private_ip: 192.168.100.12

openldap_ldap_servername: openldap.default
openldap_ldap_organisation: "{{ domain_name }}"
openldap_ldap_domain: "{{ web_base_domain }}"
openldap_ldap_basedn: "dc=k8stest,dc=com"
openldap_ldap_admin_password: Passw0rd
openldap_ldap_config_password: Passw0rd
openldap_ldap_readonly_user_password: Passw0rd

openldap_ldap_structure_groups_ou_dns:
  sso_groups: "ou=sso_groups,{{ openldap_ldap_basedn }}"
  app_groups: "ou=app_groups,{{ openldap_ldap_basedn }}"
  elasticsearch_roles: "ou=elasticsearch_roles,{{ openldap_ldap_basedn }}"

openldap_ldap_users:
  - id: user
    sn: User
    password: Passw0rd
    email: user@mail.net
    displayName: User

openldap_ldap_groups:
  # SSO Groups, used to filter access via LemonLDAP
  - id: infra
    description: Infra
    ou: sso_groups
    members:
      - user
  - id: unifi
    description: Unifi
    ou: sso_groups
    members:
      - user
  - id: web
    description: Web
    ou: sso_groups
    members:
      - user
  - id: home
    description: Home
    ou: sso_groups
    members:
      - user
  - id: stream
    description: Stream
    ou: sso_groups
    members:
      - user
  - id: dev
    description: Dev
    ou: sso_groups
    members:
      - user
  - id: dl
    description: Download
    ou: sso_groups
    members:
      - user

  # App Groups, used to filter access on each app
  - id: gitlab
    description: Gitlab
    ou: app_groups
    members:
      - user
  - id: homeassistant
    description: HomeAssistant
    ou: app_groups
    members:
      - user
  - id: nodered
    description: Node-RED
    ou: app_groups
    members:
      - user
  - id: grafana
    description: Grafana
    ou: app_groups
    members:
      - user
  - id: airsonic
    description: Airsonic
    ou: app_groups
    members:
      - user
  - id: ttrss
    description: TT-RSS
    ou: app_groups
    members:
      - user
  - id: elasticsearch
    description: ElasticSearch
    ou: app_groups
    members:
      - user


  - id: admin
    description: All access
    ou: elasticsearch_roles
    members:
      - user
  - id: kibanauser
    description: Kibana user
    ou: elasticsearch_roles
    members:
      - user


lemonldap_ldap_group_base: "{{ openldap_ldap_structure_groups_ou_dns['sso_groups'] }}"

lemonldap_location_rules:
  - domain: "infra.{{ web_base_domain }}"
    # To require TOTP, set the level to >= 4
    #requiredAuthnLevel: 4
    default_rule: groupMatch($hGroups, 'cn', 'infra')
    rules:
      # Disable Auth for ElasticSearch
      - name: 00-ElasticSearch
        uri: ^/elasticsearch/
        rule: skip
  - domain: "unifi.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'unifi')
    # To require TOTP, set the level to >= 4
    #requiredAuthnLevel: 4
  - domain: "web.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'web')
  - domain: "heimdall.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'web')
  - domain: "home.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'home')
    rules:
      # Disable Auth for HomeAssistant API
      - name: 00-HomeAssistant_API
        uri: ^/api/
        rule: skip
      # Disable Auth for HomeAssistant OAuth
      - name: 00-HomeAssistant_OAuth
        uri: ^/auth/token
        rule: skip
  - domain: "stream.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'stream')
  - domain: "plex.{{ web_base_domain }}"
    default_rule: skip
  - domain: "dev.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'dev')
    rules:
      # Skip gitlab to enable https clone
      - name: 00-Gitlab
        uri: ^/gitlab
        rule: skip
  - domain: "dl.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'dl')

zonemta_smtp_servername: zonemta.default
zonemta_mongo_user: zonemta
zonemta_mongo_root_password: Passw0rd
zonemta_mongo_password: Passw0rd
zonemta_redis_password: Passw0rd
zonemta_feeder_authentication_password: Passw0rd
# Forward to GMail by default
#zonemta_forward_mta_host: smtp.gmail.com
#zonemta_forward_mta_port: 587
#zonemta_forward_mta_auth_enabled: true
#zonemta_forward_mta_user: "whatever@gmail.com"
#zonemta_forward_mta_password: "whatever"


heimdall_applications:
- username: admin
  tags:
  - title: 'All'
    colour: '#161b1f'
    pinned: true
  - title: 'Infra'
    colour: '#161b1f'
    pinned: true
  - title: 'Auth'
    colour: '#161b1f'
    pinned: true
  - title: 'Dev'
    colour: '#161b1f'
    pinned: true
  - title: 'Home'
    colour: '#161b1f'
    pinned: true
  - title: 'Logging'
    colour: '#161b1f'
    pinned: true
  - title: 'Monitoring'
    colour: '#161b1f'
    pinned: true
  - title: 'Stream'
    colour: '#161b1f'
    pinned: true
  - title: 'Web'
    colour: '#161b1f'
    pinned: true
  - title: 'Download'
    colour: '#161b1f'
    pinned: true
  apps:
  - title: 'Dashboard Kubernetes'
    icon: 'icons/kubernetesdashboard.svg'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/kube'
    pinned: true
    tags: ['All', 'Infra']
    class: '\App\SupportedApps\KubernetesDashboard\KubernetesDashboard'
  - title: 'LemonLDAP'
    icon: 'icons/lemonldapng.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/lemonldap/manager.html'
    pinned: true
    tags: ['All', 'Auth']
    class: '\App\SupportedApps\LemonLDAPNG\LemonLDAPNG'
  - title: 'Php LDAP Admin'
    icon: 'icons/phpldapadmin.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/phpldapadmin/'
    pinned: true
    tags: ['All', 'Auth']
    class: '\App\SupportedApps\phpLDAPadmin\phpLDAPadmin'
  - title: 'MailHog'
    icon: 'icons/mailhog.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/mailhog/'
    pinned: true
    tags: ['All', 'Infra']
    class: '\App\SupportedApps\Mailhog\Mailhog'
  - title: 'Prometheus'
    icon: 'icons/prometheus.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/prometheus/'
    pinned: true
    tags: ['All', 'Monitoring']
    class: '\App\SupportedApps\Prometheus\Prometheus'
  - title: 'AlertManager'
    icon: 'icons/alertmanager.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/alertmanager/'
    pinned: true
    tags: ['All', 'Monitoring']
    class: '\App\SupportedApps\Alertmanager\Alertmanager'
  - title: 'Grafana'
    icon: 'icons/grafana.png'
    colour: '#161b1f'
    url: 'https://infra.{{ web_base_domain }}/grafana/'
    pinned: true
    tags: ['All', 'Monitoring']
    class: '\App\SupportedApps\Grafana\Grafana'
  - title: 'Kibana'
    colour: '#161b1f'
    icon: 'icons/kibana.png'
    url: 'https://infra.{{ web_base_domain }}/kibana/'
    pinned: true
    tags: ['All', 'Logging']
    class: '\App\SupportedApps\Kibana\Kibana'
  - title: 'UniFi'
    colour: '#161b1f'
    icon: 'icons/unifi.png'
    url: 'https://unifi.{{ web_base_domain }}/'
    pinned: true
    tags: ['All', 'Infra']
    class: '\App\SupportedApps\UniFi\UniFi'
  - title: 'HomeAssistant'
    colour: '#161b1f'
    icon: 'icons/homeassistant.png'
    url: 'https://home.{{ web_base_domain }}/'
    pinned: true
    tags: ['All', 'Home']
    class: '\App\SupportedApps\HomeAssistant\HomeAssistant'
  - title: 'NodeRED'
    colour: '#161b1f'
    icon: 'icons/nodered.png'
    url: 'https://home.{{ web_base_domain }}/node-red/'
    pinned: true
    tags: ['All', 'Home']
    class: '\App\SupportedApps\NodeRed\NodeRed'
  - title: 'TT-RSS'
    colour: '#161b1f'
    icon: 'icons/tinytinyrss.png'
    url: 'https://web.{{ web_base_domain }}/tt-rss/'
    pinned: true
    tags: ['All', 'Web']
    class: '\App\SupportedApps\TinyTinyRSS\TinyTinyRSS'
  - title: 'Gitlab'
    colour: '#161b1f'
    icon: 'icons/gitlab.png'
    url: 'https://dev.{{ web_base_domain }}/gitlab/'
    pinned: true
    tags: ['All', 'Dev']
    class: '\App\SupportedApps\GitLab\GitLab'
  - title: 'Plex'
    colour: '#161b1f'
    icon: 'icons/plex.png'
    url: 'https://plex.{{ web_base_domain }}/'
    pinned: true
    tags: ['All', 'Stream']
    class: '\App\SupportedApps\Plex\Plex'
  - title: 'Airsonic'
    colour: '#161b1f'
    icon: 'icons/airsonic.png'
    url: 'https://stream.{{ web_base_domain }}/airsonic/'
    pinned: true
    tags: ['All', 'Stream']
    class: '\App\SupportedApps\Airsonic\Airsonic'
  - title: 'SickChill'
    colour: '#161b1f'
    icon: 'icons/sickbeard.png'
    url: 'https://dl.{{ web_base_domain }}/sickchill/'
    pinned: true
    tags: ['All', 'Download']
    class: '\App\SupportedApps\SickBeard\SickBeard'
  - title: 'Deluge'
    colour: '#161b1f'
    icon: 'icons/deluge.png'
    url: 'https://dl.{{ web_base_domain }}/deluge/'
    pinned: true
    tags: ['All', 'Download']
    class: '\App\SupportedApps\Deluge\Deluge'
  - title: 'PyLoad'
    colour: '#161b1f'
    icon: 'icons/pyload.png'
    url: 'https://dl.{{ web_base_domain }}/pyload/'
    pinned: true
    tags: ['All', 'Download']
    class: '\App\SupportedApps\pyLoad\pyLoad'
  - title: 'SABnzbd'
    icon: 'icons/sabnzbd.png'
    colour: '#161b1f'
    url: 'https://dl.{{ web_base_domain }}/sabnzbd/'
    pinned: true
    tags: ['All', 'Download']
    class: '\App\SupportedApps\SABnzbd\SABnzbd'


ttrss_context_root: /tt-rss
ttrss_pqsql_user: ttrss
ttrss_pqsql_database: ttrss
ttrss_pqsql_password: Passw0rd
ttrss_ldap_group: "cn=ttrss,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

homeassistant_mysql_user: homeassistant
homeassistant_mysql_database: homeassistant
homeassistant_mysql_password: Passw0rd
homeassistant_mysql_root_password: Passw0rd
homeassistant_mqtt_user: user
homeassistant_mqtt_password: Passw0rd
homeassistant_ldap_group: "cn=homeassistant,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

nodered_context_root: /node-red
nodered_ldap_group: "cn=homeassistant,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

mosquitto_default_listener_servername: mosquitto.default
mosquitto_listeners:
  # Keep the "non tls" listener to avoid breaking the NGinx Ingress
  - port: 1883
    secure: False
    websocket: False
  - port: 8883
    secure: True
    websocket: False
    cert_name: server

# password generated with mosquitto_passwd
mosquitto_credientials:
  credentials:
#      user / Passw0rd
    - user:$6$iHdTqa9599orI9G2$/MPMDSugrFk98BUPguy/ap7gVStgB3sUYS1pQTdWcT6CFNz+8DcbMfL0pyiUpEjTpTHufPzbxAUXSzOYybiDgg==

# Look at the README.md to find out how to get your token
#plex_plex_token:

airsonic_ldap_group: "cn=airsonic,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

gitlab_context_path: /gitlab
gitlab_external_url: "https://dev.{{ web_base_domain }}{{ gitlab_context_path }}"

gitlab_ldap_group: "cn=gitlab,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

alertmanager_alerts_default_receiver: default
alertmanager_alerts_receivers:
 - name: "{{ alertmanager_alerts_default_receiver }}"
   emails_to:
     - user@mail.net

grafana_admin_password: Passw0rd
grafana_ldap_group: "cn=grafana,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

# FIXME : using a longer name (like elasticsearch.logging) breaks the workaround in place to update security
# The server cert is improperly used in ansible/roles/kubernetes-apps/handlers/apps/logging-elasticsearch.yml
logging_elasticsearch_servername: elasticsearch
logging_elasticsearch_replicas: 1
logging_elasticsearch_internal_users:
  - name: "{{ logging_elasticsearch_exporter_user }}"
    password: "{{ logging_elasticsearch_exporter_password }}"
    readonly: True
    roles:
      - readall
  - name: "{{ logging_fluentd_elasticsearch_user }}"
    password: "{{ logging_fluentd_elasticsearch_password }}"
    readonly: True
    roles:
      - logstash
  - name: "{{ logging_kibana_elasticsearch_user }}"
    password: "{{ logging_kibana_elasticsearch_password }}"
    readonly: True
    roles:
      - kibana_server

logging_elasticsearch_context_path: /elasticsearch
logging_elasticsearch_group: "cn=elasticsearch,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"
logging_elasticsearch_roles_dn: "{{ openldap_ldap_structure_groups_ou_dns['elasticsearch_roles'] }}"

logging_elasticsearch_exporter_user: exporter
logging_elasticsearch_exporter_password: password

logging_fluentd_elasticsearch_user: fluent
logging_fluentd_elasticsearch_password: password

logging_kibana_elasticsearch_user: kibana
logging_kibana_elasticsearch_password: password

logging_kibana_context_path: /kibana
logging_kibana_export_saved_output_dir: "/vagant/kibana_saved_objects"

sickchill_context_root: /sickchill
sickchill_api_key: "abcdefghijklmnopqrstuvwxyz123456"

deluge_context_root: /deluge

pyload_context_root: /pyload
pyload_default_user: pyload
pyload_default_password: Passw0rd

sabnzbd_context_root: /sabnzbd
sabnzbd_user: sabnzbd
sabnzbd_password: Passw0rd
sabnzbd_api_key: "abcdefghijklmnopqrstuvwxyz123456"

sabnzbd_nzbToMedia_config_sickbeard:
  tv:
    enabled: 1
    host: sickchill.default
    port: 80
    api_key: "{{ sickchill_api_key }}"
    web_root: "{{ sickchill_context_root }}"
    ssl: 0
  anime:
    enabled: 1
    host: sickchill.default
    port: 80
    api_key: "{{ sickchill_api_key }}"
    web_root: "{{ sickchill_context_root }}"
    ssl: 0
