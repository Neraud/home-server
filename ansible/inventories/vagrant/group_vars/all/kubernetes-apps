---

# Unifi private services exposed on Node_1
unifi_private_ip: 192.168.100.11

openldap_ldap_organisation: "{{ domain_name }}"
openldap_ldap_domain: "{{ web_base_domain }}"
openldap_ldap_basedn: "dc=k8stest,dc=com"
openldap_ldap_admin_password: Passw0rd
openldap_ldap_config_password: Passw0rd
openldap_ldap_readonly_user_enabled: True
openldap_ldap_readonly_user_username: readonly
openldap_ldap_readonly_user_password: Passw0rd

openldap_ldap_structure_groups_ou_dns: 
  sso_groups: "ou=sso_groups,{{ openldap_ldap_basedn }}"
  app_groups: "ou=app_groups,{{ openldap_ldap_basedn }}"
  elasticsearch_roles: "ou=elasticsearch_roles,{{ openldap_ldap_basedn }}"

openldap_ldap_users:
  - id: user
    sn: User
    password: Passw0rd
    email: user@mail.net
    displayName: User

openldap_ldap_groups:
  # SSO Groups, used to filter access via LemonLDAP
  - id: infra
    description: Infra
    ou: sso_groups
    members: 
      - user
  - id: unifi
    description: Unifi
    ou: sso_groups
    members: 
      - user
  - id: web
    description: Web
    ou: sso_groups
    members: 
      - user
  - id: home
    description: Home
    ou: sso_groups
    members: 
      - user
  - id: stream
    description: Stream
    ou: sso_groups
    members: 
      - user
  - id: dev
    description: Dev
    ou: sso_groups
    members: 
      - user

  # App Groups, used to filter access on each app
  - id: gitlab
    description: Gitlab
    ou: app_groups
    members: 
      - user
  - id: homeassistant
    description: HomeAssistant
    ou: app_groups
    members: 
      - user
  - id: nodered
    description: Node-RED
    ou: app_groups
    members: 
      - user
  - id: grafana
    description: Grafana
    ou: app_groups
    members: 
      - user
  - id: airsonic
    description: Airsonic
    ou: app_groups
    members: 
      - user
  - id: ttrss
    description: TT-RSS
    ou: app_groups
    members: 
      - user
  - id: elasticsearch
    description: ElasticSearch
    ou: app_groups
    members: 
      - user


  - id: admin
    description: All access
    ou: elasticsearch_roles
    members: 
      - user
  - id: kibanauser
    description: Kibana user
    ou: elasticsearch_roles
    members: 
      - user

phpldapadmin_bind_id: "cn=admin,{{ openldap_ldap_basedn }}"
phpldapadmin_bind_password: "{{ openldap_ldap_admin_password }}"

lemonldap_ldap_base: "{{ openldap_ldap_basedn }}"
lemonldap_ldap_manager_dn: "cn=admin,{{ openldap_ldap_basedn }}"
lemonldap_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
lemonldap_ldap_group_base: "{{ openldap_ldap_structure_groups_ou_dns['sso_groups'] }}"

#lemonldap_smtp_user: whatever@gmail.com
#lemonldap_smtp_password: todo
#lemonldap_smtp_from: "{{ lemonldap_smtp_user }}"
#lemonldap_smtp_replyTo: "{{ lemonldap_smtp_user }}"

lemonldap_location_rules:
  - domain: "infra.{{ web_base_domain }}"
    # To require TOTP, set the level to >= 4
    #requiredAuthnLevel: 4
    default_rule: groupMatch($hGroups, 'cn', 'infra')
    rules:
      # Disable Auth for ElasticSearch
      - name: 00-ElasticSearch
        uri: ^/elasticsearch/
        rule: skip
  - domain: "unifi.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'unifi')
    # To require TOTP, set the level to >= 4
    #requiredAuthnLevel: 4
  - domain: "web.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'web')
  - domain: "home.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'home')
    rules:
      # Disable Auth for HomeAssistant API
      - name: 00-HomeAssistant_API
        uri: ^/api/
        rule: skip
      # Disable Auth for HomeAssistant OAuth
      - name: 00-HomeAssistant_OAuth
        uri: ^/auth/token
        rule: skip
  - domain: "stream.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'stream')
  - domain: "plex.{{ web_base_domain }}"
    default_rule: skip
  - domain: "dev.{{ web_base_domain }}"
    default_rule: groupMatch($hGroups, 'cn', 'dev')
    rules:
      # Skip gitlab to enable https clone
      - name: 00-Gitlab
        uri: ^/gitlab
        rule: skip

ttrss_context_root: /tt-rss
ttrss_pqsql_user: ttrss
ttrss_pqsql_database: ttrss
ttrss_pqsql_password: Passw0rd
ttrss_ldap_group: "cn=ttrss,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

homeassistant_mysql_user: homeassistant
homeassistant_mysql_database: homeassistant
homeassistant_mysql_password: Passw0rd
homeassistant_mysql_root_password: Passw0rd
homeassistant_mqtt_user: user
homeassistant_mqtt_password: Passw0rd
homeassistant_ldap_group: "cn=homeassistant,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

nodered_context_root: /node-red
nodered_ldap_group: "cn=homeassistant,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

mosquitto_listeners: 
  - port: 1883
    secure: False
    websocket: False

# password generated with mosquitto_passwd
mosquitto_credientials: 
  credentials:
#      user / Passw0rd
    - user:$6$iHdTqa9599orI9G2$/MPMDSugrFk98BUPguy/ap7gVStgB3sUYS1pQTdWcT6CFNz+8DcbMfL0pyiUpEjTpTHufPzbxAUXSzOYybiDgg==

# Look at the README.md to find out how to get your token
#plex_plex_token: 

airsonic_ldap_group: "cn=airsonic,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

gitlab_context_path: /gitlab
gitlab_external_url: "https://dev.{{ web_base_domain }}{{ gitlab_context_path }}"

gitlab_ldap_user_base: "{{ openldap_ldap_structure_users_ou_dn }}"
gitlab_ldap_manager_dn: "cn=admin,{{ openldap_ldap_basedn }}"
gitlab_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
gitlab_ldap_group: "cn=gitlab,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"


grafana_admin_password: Passw0rd
grafana_ldap_group: "cn=grafana,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"

logging_elasticsearch_replicas: 1
logging_elasticsearch_internal_users:
  - name: "{{ logging_elasticsearch_exporter_user }}"
    password: "{{ logging_elasticsearch_exporter_password }}"
    readonly: True
    roles:
      - readall
  - name: "{{ logging_fluentd_elasticsearch_user }}"
    password: "{{ logging_fluentd_elasticsearch_password }}"
    readonly: True
    roles: 
      - logstash
  - name: "{{ logging_kibana_elasticsearch_user }}"
    password: "{{ logging_kibana_elasticsearch_password }}"
    readonly: True
    roles:
      - kibana_server

logging_elasticsearch_context_path: /elasticsearch
logging_elasticsearch_group: "cn=elasticsearch,{{ openldap_ldap_structure_groups_ou_dns['app_groups'] }}"
logging_elasticsearch_roles_dn: "{{ openldap_ldap_structure_groups_ou_dns['elasticsearch_roles'] }}"

logging_elasticsearch_exporter_user: exporter
logging_elasticsearch_exporter_password: password

logging_fluentd_elasticsearch_user: fluent
logging_fluentd_elasticsearch_password: password

logging_kibana_elasticsearch_user: kibana
logging_kibana_elasticsearch_password: password

logging_kibana_context_path: /kibana
logging_kibana_valid_certs: False
logging_kibana_export_saved_output_dir: "/vagant/kibana_saved_objects"
