---
glusterfs_volumes:
  docker-registry-data:
    replicas: 2
    capacity: 15G
    arbiterCapacity: 64M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: docker-registry
      app.kubernetes.io/component: registry
  gotify-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: gotify
      app.kubernetes.io/component: gotify
  zonemta-mongo-data:
    replicas: 2
    capacity: 1G
    arbiterCapacity: 128M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: zonemta
      app.kubernetes.io/component: mongo
  zonemta-redis-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: zonemta
      app.kubernetes.io/component: redis
  blocky-pgsql:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 64M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: blocky
      app.kubernetes.io/component: pgsql
  unifi-data:
    replicas: 2
    capacity: 1G
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: unifi
      app.kubernetes.io/component: unifi
  openldap-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: openldap
      app.kubernetes.io/component: openldap
      storage: data
  openldap-config:
    replicas: 2
    capacity: 16M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: openldap
      app.kubernetes.io/component: openldap
      storage: config
  openldap-run:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: openldap
      app.kubernetes.io/component: openldap
      storage: run
  lemonldap-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: lemonldap
      app.kubernetes.io/component: lemonldap
      storage: data
  prometheus-k8s:
    replicas: 2
    capacity: 4G
    arbiterCapacity: 64M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
  alertmanager-k8s:
    replicas: 2
    capacity: 16M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/component: alertmanager
      app.kubernetes.io/instance: k8s
  grafana-data:
    replicas: 2
    capacity: 128M
    arbiterCapacity: 128M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: grafana
  ttrss-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: ttrss
      app.kubernetes.io/component: ttrss
  ttrss-pgsql:
    replicas: 2
    capacity: 1G
    arbiterCapacity: 128M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: ttrss
      app.kubernetes.io/component: pgsql
  nextcloud-app:
    replicas: 2
    capacity: 768M
    arbiterCapacity: 64M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: nextcloud
      app.kubernetes.io/component: nextcloud
      storage: app
  nextcloud-mysql:
    replicas: 2
    capacity: 512M
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: nextcloud
      app.kubernetes.io/component: mysql
  paperless-data:
    replicas: 2
    capacity: 128M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: paperless
      app.kubernetes.io/component: paperless
      storage: data
  paperless-pgsql:
    replicas: 2
    capacity: 512M
    arbiterCapacity: 64M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: paperless
      app.kubernetes.io/component: pgsql
  paperless-redis:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: paperless
      app.kubernetes.io/component: redis
  syncthing-data:
    replicas: 2
    capacity: 64M
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: syncthing
      app.kubernetes.io/component: syncthing
  syncthing-discovery-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: syncthing
      app.kubernetes.io/component: discovery
  homeassistant-config:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: homeassistant
      app.kubernetes.io/component: homeassistant
  homeassistant-mysql:
    replicas: 2
    capacity: 2G
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: homeassistant
      app.kubernetes.io/component: mysql
  nodered-data:
    replicas: 2
    capacity: 128M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: nodered
      app.kubernetes.io/component: nodered
  mosquitto-data:
    replicas: 2
    capacity: 128M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: mosquitto
      app.kubernetes.io/component: mosquitto
      storage: data
  esphome-config:
    replicas: 2
    capacity: 128M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: esphome
      app.kubernetes.io/component: esphome
  zwavejs2mqtt-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: zwavejs2mqtt
      app.kubernetes.io/component: zwavejs2mqtt
  zigbee2mqtt-data:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: zigbee2mqtt
      app.kubernetes.io/component: zigbee2mqtt
  frigate-config:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: frigate
      app.kubernetes.io/component: frigate
  airsonic-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: airsonic
      app.kubernetes.io/component: airsonic
      storage: data
  airsonic-playlists:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: airsonic
      app.kubernetes.io/component: airsonic
      storage: playlists
  jellyfin-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/component: jellyfin
  gitea-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: gitea
      app.kubernetes.io/component: gitea
  gitea-pgsql:
    replicas: 2
    capacity: 512M
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: gitea
      app.kubernetes.io/component: pgsql
  kibana-data:
    replicas: 2
    capacity: 64M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/component: kibana
      storage: data
  deluge-data:
    replicas: 2
    capacity: 256M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: deluge
      app.kubernetes.io/component: deluge
  pyload-config:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: pyload
      app.kubernetes.io/component: pyload
  sabnzbd-config:
    replicas: 2
    capacity: 32M
    arbiterCapacity: 16M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: sabnzbd
      app.kubernetes.io/component: sabnzbd
  sickchill-data:
    replicas: 2
    capacity: 1G
    arbiterCapacity: 32M
    nodes: [master-test-2, master-test-3]
    arbiters: [master-test-1]
    reclaim_policy: Retain
    labels:
      app.kubernetes.io/name: sickchill
      app.kubernetes.io/component: sickchill
