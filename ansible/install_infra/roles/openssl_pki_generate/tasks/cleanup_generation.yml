---
- name: Prepare list of expected CA files
  ansible.builtin.set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"
  vars:
    expected_files:
      - "{{ item.pki_name }}/ca.pkcs1.key"
      - "{{ item.pki_name }}/ca.key"
      - "{{ item.pki_name }}/ca.csr"
      - "{{ item.pki_name }}/ca.crt"

- name: Prepare list of expected certs files
  ansible.builtin.set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"
  vars:
    expected_files:
      - "{{ item.0.pki_name }}/{{ item.1.name }}/server.pkcs1.key"
      - "{{ item.0.pki_name }}/{{ item.1.name }}/server.key"
      - "{{ item.0.pki_name }}/{{ item.1.name }}/server.csr"
      - "{{ item.0.pki_name }}/{{ item.1.name }}/server.crt"

- name: Prepare list of DH Parameters
  ansible.builtin.set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  when: item.1.generate_dh_param_enabled | default(false)
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"
  vars:
    expected_files:
      - "{{ item.0.pki_name }}/{{ item.1.name }}/dhparam.pem"

- name: List existing files on the controller
  ansible.builtin.find:
    paths:
      - "{{ custom_ssl_pki_generation_root_dir }}"
    file_type: file
    recurse: yes
  register: custom_pki_current_files

- name: Delete obsolete files from controller
  ansible.builtin.file:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item }}"
    state: absent
  loop: "{{ custom_pki_current_files.files | map(attribute='path') | replace(custom_ssl_pki_generation_root_dir + '/', '') }}"
  when: item not in custom_pki_expected_files

- name: Fetch existing files from a current node
  ansible.builtin.fetch:
    src: "{{ custom_ssl_pki_root_dir }}/{{ item }}"
    dest: "{{ custom_ssl_pki_generation_root_dir }}/{{ item }}"
    flat: yes
    fail_on_missing: no
  delegate_to: "{{ groups.loadbalancers | first }}"
  loop: "{{ custom_pki_expected_files }}"
