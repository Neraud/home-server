#jinja2: trim_blocks: "true", lstrip_blocks: "false"
# {{ ansible_managed }}

{% if item.http_port | default(False) %}
server {
	listen {{ item.listen_ip | default(nginx_listen_ip) }}:{{ item.http_port }}{% if item.default | default(False) %} default_server{% endif %};
	listen [::]:{{ item.http_port }}{% if item.default | default(False) %} default_server{% endif %};
	server_name {% if item.default | default(False) %}_ {% endif %}{{ item.server_name | default("_") }};
	root /var/www/html;
	
	access_log /var/log/nginx/{{ item.name }}_access.log main;
	error_log /var/log/nginx/{{ item.name }}_error.log;	
	
	{% if item.force_http_to_https | default(False) %}
	location / { rewrite ^ https://$host$request_uri? permanent; }
	{% else %}
	index index.html index.htm index.nginx-debian.html;

		{% if item.content is defined %}
	{{ item.content }}
		{% endif %}

		{% if item.status is defined and item.status.enabled | default(False) %}
	location {{ item.status.path | default('/status') }} {
		stub_status on;
		access_log off;
		{% for allow in item.status.allow %}
		allow {{ allow }};
		{% endfor %}
		deny all;
	}
		{% endif %}

		{% if item.disable_robots %}
	location /robots.txt { alias {{ nginx_default_disabled_robots_path }}; }
		{% endif %}
		
		{% if item.lemonLdap is defined %}
	# Internal authentication request
	location = {{ item.lemonLdap.path | default("/lmauth") }} {
		internal;
		include /etc/nginx/fastcgi_params;
		fastcgi_pass {{ item.lemonLdap.proxy_pass }};

		# Drop post datas
		fastcgi_pass_request_body  off;
		fastcgi_param CONTENT_LENGTH "";
		
		# Allow very large body, we don't care, it's dropped !
		client_max_body_size 1024m;

		# Keep original hostname
		fastcgi_param HOST $http_host;

		# Keep original request (LLNG server will received {{ item.lemonLdap.path | default("/lmauth") }})
		fastcgi_param X_ORIGINAL_URI  $request_uri;

		fastcgi_buffers 16 16k;
		fastcgi_buffer_size 32k;
	}
		{% endif %}
			
		{% for location in item.locations | default() %}
	location {{ location.path }} {
			{% if location.root is defined %}
		root {{ location.root }};
			{% endif %}
			{% if location.alias is defined %}
		alias {{ location.alias }};
			{% endif %}
			{% if location.proxy_pass is defined %}
		include custom_proxy_params;
		proxy_pass {{ location.proxy_pass }};
			{% endif %}
			{% if location.proxy_enable_websocket is defined and location.proxy_enable_websocket %}
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
			{% endif %}
			{% if location.auth_basic is defined %}
		auth_basic "{{ location.auth_basic.name }}";
		auth_basic_user_file {{ location.auth_basic.path }};
		proxy_set_header Authorization "";
			{% endif %}
			{% if location.lemonLdap_protected | default(false) %}
		auth_request {{ item.lemonLdap.path | default("/lmauth") }};
		auth_request_set $lmremote_user $upstream_http_lm_remote_user;
		auth_request_set $lmlocation $upstream_http_location;
		error_page 401 $lmlocation;
				{% for exported_header in location.lemonLdap_exported_headers | default({}) | dict2items %}
		auth_request_set ${{ exported_header.key | replace("-", "_") | lower }} $upstream_http_{{ exported_header.value | replace("-", "_") | lower  }};
		proxy_set_header {{ exported_header.key }} ${{ exported_header.key | replace("-", "_") | lower }};
				{% endfor %}
			{% endif %}
			
			{% if location.php_fpm_pool is defined %}
		index index.php index.html index.htm;
		location ~ \.php$ {
			include        fastcgi.conf;
			fastcgi_pass   {{ location.php_fpm_pool }};
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $request_filename;
        }
			{% endif %}
			
			{% if location.content is defined %}
		{{ location.content }}
			{% endif %}
	}
		{% endfor %}
	{% endif %}	
}

{% endif %}

{% if item.https_port | default(False) %}
server {
	listen {{ item.listen_ip | default(nginx_listen_ip) }}:{{ item.https_port }} ssl{% if item.default | default(False) %} default_server{% endif %};
	listen [::]:{{ item.https_port }} ssl{% if item.default | default(False) %} default_server{% endif %};
	server_name {% if item.default | default(False) %}_ {% endif %}{{ item.server_name | default("_") }};
	root /var/www/html;

	access_log /var/log/nginx/{{ item.name }}_ssl_access.log main;
	error_log /var/log/nginx/{{ item.name }}_ssl_error.log;

	# SSL configuration
	ssl on;
	{% if item.https_cert.mode == "file" or item.https_cert.mode == "selfsigned" %}
	ssl_certificate {{ item.https_cert.cert_path }};
	ssl_certificate_key {{ item.https_cert.cert_key_path }};
	{% elif item.https_cert.mode == "letsencrypt" %}
	ssl_certificate /etc/letsencrypt/live/{{ item.server_name }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ item.server_name }}/privkey.pem;
	{% endif %}

	# SSL conf from : https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&hsts=false&guideline=5.6
	ssl_session_timeout 1d;
	ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
	ssl_session_tickets off;

	{% if nginx_ssl_dhparam_generate %}
	ssl_dhparam {{ nginx_ssl_dhparam_path }};
	{% endif %}

	# intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers off;

	# OCSP stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	
	index index.html index.htm index.nginx-debian.html;

	{% if item.content is defined %}
	{{ item.content }}
	{% endif %}

	{% if item.status is defined and item.status.enabled | default(False) %}
	location {{ item.status.path | default('/status') }} {
		stub_status on;
		access_log off;
		{% for allow in item.status.allow %}
		allow {{ allow }};
		{% endfor %}
		deny all;
	}
	{% endif %}
		
	{% if item.disable_robots %}
	location /robots.txt { alias {{ nginx_default_disabled_robots_path }}; }
	{% endif %}

	{% if item.lemonLdap is defined %}
	# Internal authentication request
	location = {{ item.lemonLdap.path | default("/lmauth") }} {
		internal;
		include /etc/nginx/fastcgi_params;
		fastcgi_pass {{ item.lemonLdap.proxy_pass }};

		# Drop post datas
		fastcgi_pass_request_body  off;
		fastcgi_param CONTENT_LENGTH "";
		
		# Allow very large body, we don't care, it's dropped !
		client_max_body_size 1024m;

		# Keep original hostname
		fastcgi_param HOST $http_host;

		# Keep original request (LLNG server will received {{ item.lemonLdap.path | default("/lmauth") }})
		fastcgi_param X_ORIGINAL_URI  $request_uri;
		
		fastcgi_buffers 16 16k;
		fastcgi_buffer_size 32k;
	}
	{% endif %}

		{% for location in item.locations | default() %}
	location {{ location.path }} {
			{% if location.root is defined %}
		root {{ location.root }};
			{% endif %}
			{% if location.alias is defined %}
		alias {{ location.alias }};
			{% endif %}
			{% if location.proxy_pass is defined %}
		include custom_proxy_params;
		proxy_pass {{ location.proxy_pass }};
			{% endif %}
			{% if location.proxy_enable_websocket is defined and location.proxy_enable_websocket %}
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
			{% endif %}
			{% if location.auth_basic is defined %}
		auth_basic "{{ location.auth_basic.name }}";
		auth_basic_user_file {{ location.auth_basic.path }};
		proxy_set_header Authorization "";
			{% endif %}
			{% if location.lemonLdap_protected | default(false) %}
		auth_request {{ item.lemonLdap.path | default("/lmauth") }};
		auth_request_set $lmremote_user $upstream_http_lm_remote_user;
		auth_request_set $lmlocation $upstream_http_location;
		error_page 401 $lmlocation;
				{% for exported_header in location.lemonLdap_exported_headers | default({}) | dict2items %}
		auth_request_set ${{ exported_header.key | replace("-", "_") | lower }} $upstream_http_{{ exported_header.value | replace("-", "_") | lower  }};
		proxy_set_header {{ exported_header.key }} ${{ exported_header.key | replace("-", "_") | lower }};
				{% endfor %}
			{% endif %}
			
			{% if location.php_fpm_pool is defined %}
		index index.php index.html index.htm;
		location ~ \.php$ {
			include        fastcgi.conf;
			fastcgi_pass   {{ location.php_fpm_pool }};
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $request_filename;
        }
			{% endif %}
			
			{% if location.content is defined %}
		{{ location.content }}
			{% endif %}
	}
		{% endfor %}
}
{% endif %}
