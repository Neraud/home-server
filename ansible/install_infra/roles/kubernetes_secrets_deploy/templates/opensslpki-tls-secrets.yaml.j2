apiVersion: v1
kind: Secret
metadata:
  name: opensslpki-{{ item.secret_name }}-tls
  namespace: cluster-secrets
  annotations:
{% if item.kubernetes_replicator.push_full_to_namespaces | default([]) | length > 0 %}
    replicator.v1.mittwald.de/replicate-to: "{{ item.kubernetes_replicator.push_full_to_namespaces | join(',') }}"
{% endif %}
{% if item.kubernetes_replicator.pull_full_namespaces | default([]) | length > 0 %}
    replicator.v1.mittwald.de/replication-allowed: "true"
    replicator.v1.mittwald.de/replication-allowed-namespaces: "{{ item.kubernetes_replicator.pull_full_namespaces | join(',') }}"
{% endif %}
type: kubernetes.io/tls
data:
  ca.crt: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/ca.crt') | b64encode }}
  tls.crt: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/' + item.cert_name + '/server.crt') | b64encode }}
  tls.key: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/' + item.cert_name + '/server.key') | b64encode }}
{% if item.include_dhparam | default(false) %}
  dhparam.pem: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/' + item.cert_name + '/dhparam.pem') | b64encode }}
{% endif %}

---

apiVersion: v1
kind: Secret
metadata:
  name: opensslpki-{{ item.secret_name }}-cert
  namespace: cluster-secrets
  annotations:
{% if item.kubernetes_replicator.push_cert_to_namespaces | default([]) | length > 0 %}
    replicator.v1.mittwald.de/replicate-to: "{{ item.kubernetes_replicator.push_cert_to_namespaces | join(',') }}"
{% endif %}
{% if item.kubernetes_replicator.pull_cert_namespaces | default([]) | length > 0 %}
    replicator.v1.mittwald.de/replication-allowed: "true"
    replicator.v1.mittwald.de/replication-allowed-namespaces: "{{ item.kubernetes_replicator.pull_cert_namespaces | join(',') }}"
{% endif %}
data:
  ca.crt: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/ca.crt') | b64encode }}
  tls.crt: {{ lookup('ansible.builtin.file', custom_ssl_pki_generation_root_dir + '/' + item.pki_name + '/' + item.cert_name + '/server.crt') | b64encode }}
