---
- name: Configure UFW for dnsmasq
  ansible.builtin.include_role:
    name: firewall
    tasks_from: add-applications
  vars:
    ufw_applications: "{{ dnsmasq_ufw_applications }}"

- name: Install dnsmasq
  ansible.builtin.apt:
    pkg:
      - dnsmasq
    state: present

- name: Configure dnsmasq
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    backup: yes
  notify: Restart dnsmasq

- name: Configure dnsmasq default
  ansible.builtin.template:
    src: dnsmasq_default.j2
    dest: /etc/default/dnsmasq
    backup: yes
  notify: Restart dnsmasq

- name: Fill dnsmasq hosts with local machines
  ansible.builtin.copy:
    dest: /etc/dnsmasq_hosts
    content: |
      {% for dns_local_host in dns_local_hosts %}
      {{ dns_local_host.ip }} {{ dns_local_host.name }}
      {% endfor %}
  notify: Restart dnsmasq

- name: Fill dnsmasq local domains
  ansible.builtin.copy:
    dest: /etc/dnsmasq.d/local_domains.conf
    content: |
      {% for dns_local_domain in dns_local_domains %}
      address=/{{ dns_local_domain.name }}/{{ dns_local_domain.ip }}
      {% endfor %}
  notify: Restart dnsmasq

- name: Set dnsmasq upstreams
  ansible.builtin.copy:
    dest: /etc/dnsmasq_upstreams
    content: |
      {% for dnsmasq_upstream in dnsmasq_upstreams %}
      nameserver {{ dnsmasq_upstream }}
      {% endfor %}
  notify: Restart dnsmasq

- name: Auto-start dnsmasq
  ansible.builtin.service:
    name: dnsmasq
    state: started
    enabled: yes
