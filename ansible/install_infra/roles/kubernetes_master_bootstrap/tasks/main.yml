---
- name: Install kubectl
  ansible.builtin.apt:
    pkg: kubectl
    state: present

# TODO check if that's a proper way to detect if the master has already been installed
- name: Check if kubeadm has already run
  ansible.builtin.command: kubectl {{ hostvars[groups.controller | first].kubectl_params }} cluster-info
  delegate_to: "{{ groups.controller | first }}"
  changed_when: false
  failed_when: false
  register: kubectl_info

- name: Generate kubeadm config file
  ansible.builtin.template:
    dest: /tmp/kubeadm_config.yaml
    src: kubeadm_config.yaml.j2
  when: kubectl_info.rc != 0

- name: Initialize first master
  ansible.builtin.command: "kubeadm init --config /tmp/kubeadm_config.yaml"
  register: kubeadm_init
  when: kubectl_info.rc != 0

- name: Ensure directories exist for Fetch Kubernetes PKI
  ansible.builtin.file:
    path: "{{ kubernetes_pki_fetch_dir }}/etcd"
    state: directory
  delegate_to: "{{ groups['controller'][0] }}"

- name: Fetch Kubernetes PKI from master bootstrap
  ansible.posix.synchronize:
    src: "/etc/kubernetes/pki/{{ item }}"
    dest: "{{ kubernetes_pki_fetch_dir }}/{{ item }}"
    mode: pull
  delegate_to: "{{ groups['controller'][0] }}"
  with_items:
    - ca.crt
    - ca.key
    - sa.key
    - sa.pub
    - front-proxy-ca.crt
    - front-proxy-ca.key
    - etcd/ca.crt
    - etcd/ca.key
