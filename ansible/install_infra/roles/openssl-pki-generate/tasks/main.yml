---

- name: Ensure directory exists for custom PKIs
  file:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}"
    state: directory
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"

- name: Ensure directory exists for each server certificate
  file:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}"
    state: directory
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"

- name: Prepare list of expected CA files
  set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"
  vars:
    expected_files:
    - "{{ item.pki_name }}/ca.pkcs1.key"
    - "{{ item.pki_name }}/ca.key"
    - "{{ item.pki_name }}/ca.csr"
    - "{{ item.pki_name }}/ca.crt"

- name: Prepare list of expected certs files
  set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"
  vars:
    expected_files:
    - "{{ item.0.pki_name }}/{{ item.1.name }}/server.pkcs1.key"
    - "{{ item.0.pki_name }}/{{ item.1.name }}/server.key"
    - "{{ item.0.pki_name }}/{{ item.1.name }}/server.csr"
    - "{{ item.0.pki_name }}/{{ item.1.name }}/server.crt"

- name: Prepare list of DH Parameters
  set_fact:
    custom_pki_expected_files: "{{ custom_pki_expected_files | default([]) + expected_files }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  when: item.1.generate_dh_param_enabled | default(false)
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"
  vars:
    expected_files:
    - "{{ item.0.pki_name }}/{{ item.1.name }}/dhparam.pem"

- name: List existing files on the controller
  find:
    paths:
    - "{{ custom_ssl_pki_generation_root_dir }}"
    file_type: file
    recurse: yes
  register: custom_pki_current_files

- name: Delete obsolete files from controller
  file:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item }}"
    state: absent
  loop: "{{ custom_pki_current_files.files | map(attribute='path') | replace(custom_ssl_pki_generation_root_dir + '/', '') }}"
  when: item not in custom_pki_expected_files

- name: Fetch existing files from a current node
  fetch:
    src: "{{ custom_ssl_pki_root_dir }}/{{ item }}"
    dest: "{{ custom_ssl_pki_generation_root_dir }}/{{ item }}"
    flat: yes
    fail_on_missing: no
  delegate_to: "{{ groups.loadbalancers | first }}"
  loop: "{{ custom_pki_expected_files }}"

#TODO : openssl_privatekey is always changed when path is on a VirtualBox shared folder (mode is forced to 777, openssl_privatekey tries to chmod it to 600)
- name: Generate OpenSSL CA private key
  openssl_privatekey:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.pkcs1.key"
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"

- name: Convert OpenSSL CA private key to PKCS8
  command: openssl pkcs8 -topk8 -inform PEM -in {{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.pkcs1.key -out {{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.key -nocrypt
  args:
    creates: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.key"
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"

- name: Generate an OpenSSL CA CSR
  openssl_csr:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.csr"
    privatekey_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.key"
    common_name: "{{ item.ca_common_name }}"
    basicConstraints:
      - CA:TRUE
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"

- name: Generate a Self Signed OpenSSL CA certificate
  openssl_certificate:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.crt"
    privatekey_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.key"
    csr_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.pki_name }}/ca.csr"
    provider: selfsigned
  with_items: "{{ openssl_custom_pki }}"
  loop_control:
    label: "{{ item.pki_name }}"

#TODO : openssl_privatekey is always changed when path is on a VirtualBox shared folder (mode is forced to 777, openssl_privatekey tries to chmod it to 600)
- name: Generate an OpenSSL server private key
  openssl_privatekey:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.pkcs1.key"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"

- name: Convert an OpenSSL server private key to PKCS8
  command: openssl pkcs8 -topk8 -inform PEM -in {{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.pkcs1.key -out {{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.key -nocrypt
  args:
    creates: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.key"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"

- name: Generate an OpenSSL server CSR
  openssl_csr:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.csr"
    privatekey_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.key"
    common_name: "{{ item.1.common_name }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"

- name: Generate a CA Signed OpenSSL server certificate
  openssl_certificate:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.crt"
    privatekey_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.key"
    csr_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/server.csr"
    ownca_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/ca.crt"
    ownca_privatekey_path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/ca.key"
    provider: ownca
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"

- name: Generate DH Parameters
  openssl_dhparam:
    path: "{{ custom_ssl_pki_generation_root_dir }}/{{ item.0.pki_name }}/{{ item.1.name }}/dhparam.pem"
    size: "{{ item.1.generate_dh_param_size | default(2048) }}"
  with_subelements:
    - "{{ openssl_custom_pki }}"
    - certs
  when: item.1.generate_dh_param_enabled | default(false)
  loop_control:
    label: "{{ item.0.pki_name }} : {{ item.1.name }}"
