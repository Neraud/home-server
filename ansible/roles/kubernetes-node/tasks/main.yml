---

- name: Configure UFW for Kubernetes masters
  import_tasks: ../../firewall/tasks/add-applications.yml
  vars:
    ufw_applications: "{{ kubernetes_master_ufw_applications }}"
  when: "'kubernetes_masters' in group_names"

- name: Configure UFW for Kubernetes workers
  import_tasks: ../../firewall/tasks/add-applications.yml
  vars:
    ufw_applications: "{{ kubernetes_worker_ufw_applications }}"

- name: Check if the node is already added in the cluster
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf_result

- name: Register if the node is already added in the cluster
  set_fact:
    has_already_joined_kubernetes_cluster: "{{ kubelet_conf_result.stat.isreg | default(false) | bool }}"

- name: Generate token to join on master
  command: kubeadm token create --ttl=5m --description="Token to allow {{ inventory_hostname }} to join" --print-join-command
  register: join_command
  delegate_to: "{{ groups['kubernetes_master_bootstrap'][0] }}"
  become: yes
  become_user: "{{ kubernetes_user.name }}"
  when: not has_already_joined_kubernetes_cluster

- name: Fail when the join command is not supplied
  fail:
    msg: "kubeadm token create didn't return a join command"
  when:
    - not has_already_joined_kubernetes_cluster
    - "'kubeadm join' not in join_command.stdout_lines[0]"

- name: Join cluster
  command: "{{ join_command.stdout_lines[0] }}"
  when: not has_already_joined_kubernetes_cluster

- name: Configure kubectl
  synchronize:
    src: /etc/kubernetes/admin.conf
    dest: /etc/kubernetes/admin.conf
  delegate_to: "{{ groups['kubernetes_master_bootstrap'][0] }}"
