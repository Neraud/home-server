---

web_base_domain: domain.tld

kubernetes_user:
  name: "{{ standard_user.name }}"
  home: "{{ standard_user.home }}"

kubernetes_defnitions_root_dir: /opt/provision/kubernetes

custom_ssl_certs_root_dir: /etc/ssl/private

kubernetes_registry_port: 30500
kubernetes_registry_url: 127.0.0.1:{{ kubernetes_registry_port }}

# Expose Unifi private services on the Node IP
#unifi_private_ip: 

# OpenLDAP sererver name. We use the Kubernetes [service].[namespace] format
openldap_ldap_servername: openldap.default
openldap_ldap_organisation: Example Inc.
openldap_ldap_domain: example.org
openldap_ldap_basedn: "dc=example,dc=org" #if empty automatically set from LDAP_DOMAIN
openldap_ldap_admin_dn: "cn=admin,{{ openldap_ldap_basedn }}"
openldap_ldap_admin_password: admin
openldap_ldap_config_password: config
openldap_ldap_readonly_user_enabled: False
openldap_ldap_readonly_user_username: readonly
openldap_ldap_readonly_user_password: readonly

# Create the CA secret in the following namespaces
openldap_exposed_namespaces:
  - default
  - monitoring
  - logging

openldap_ldap_structure_users_ou_dn: "ou=users,{{ openldap_ldap_basedn }}"
#openldap_ldap_structure_groups_ou_dns: 
#  groups: "ou=groups,{{ openldap_ldap_basedn }}"
#
#openldap_ldap_users:
#  - id: user1
#    sn: User1
#    password: clear_password1
#    email: user1@mail.net
#    displayName: User1
#  - id: user2
#    sn: User2
#    password: clear_password2
#    email: user2@mail.net
#    displayName: User2
#openldap_ldap_groups:
#  - id: test_group
#    description: Test group
#    ou: groups
#    members: 
#      - user1
#      - user2

phpldapadmin_ldap_servername: "{{ openldap_ldap_servername }}"
phpldapadmin_bind_id: "{{ openldap_ldap_admin_dn }}"
phpldapadmin_bind_password: "{{ openldap_ldap_admin_password }}"

lemonldap_fastcgi_port: 9000
lemonldap_persistent_volume_path: /var/lib/lemonldap-ng-pv
lemonldap_ldap_servername: "{{ openldap_ldap_servername }}"
lemonldap_ldap_base: "{{ openldap_ldap_basedn }}"
lemonldap_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
lemonldap_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
lemonldap_ldap_group_base: openldap_ldap_structure_groups_ou_dns['groups']

lemonldap_smtp_host: "{{ zonemta_smtp_servername }}"
lemonldap_smtp_port: 587
lemonldap_smtp_user: "{{ zonemta_feeder_authentication_username }}"
lemonldap_smtp_password: "{{ zonemta_feeder_authentication_password }}"
lemonldap_smtp_tls: starttls
lemonldap_smtp_from: "noreply@{{ web_base_domain }}"
lemonldap_smtp_replyTo: "noreply@{{ web_base_domain }}"

lemonldap_location_rules:
  - domain: "infra.{{ web_base_domain }}"
    default_rule: accept
#    requiredAuthnLevel: 1
#    rules: 
#      - name: New Rule
#        uri: ^new
#        rule: accept
  - domain: "web.{{ web_base_domain }}"
    default_rule: accept


zonemta_smtp_servername: zonemta.default
zonemta_feeder_authentication_enabled: true
zonemta_feeder_authentication_username: smtp
zonemta_feeder_authentication_password: clear_password
zonemta_mongo_root_user: root
zonemta_mongo_root_password: clear_password
zonemta_mongo_user: zonemta
zonemta_mongo_database: zonemta
zonemta_mongo_password: clear_password
zonemta_redis_password: clear_password
# Forward to Mailhog by default
zonemta_forward_mta_host: mailhog.default.svc.cluster.local
zonemta_forward_mta_port: 1025
zonemta_forward_mta_auth_enabled: false
#zonemta_forward_mta_user: user
#zonemta_forward_mta_password: password
zonemta_exposed_namespaces: 
  - default
  - monitoring
  - logging

mailhog_exposed_smtp: mailhog.default.svc.cluster.local:1025
mailhog_forward_smtp_enabled: false
#mailhog_forward_smtp_name: "TODO"
#mailhog_forward_smtp_host: "..."
#mailhog_forward_smtp_port: "587"
#mailhog_forward_smtp_email: "..."
#mailhog_forward_smtp_username: "..."
#mailhog_forward_smtp_password: "..."
#mailhog_forward_smtp_mechanism: "PLAIN"

ttrss_context_root: /
ttrss_pqsql_user: ttrss
ttrss_pqsql_database: ttrss
ttrss_pqsql_password: clear_password
# Keep the schema URL in sync with the image version
ttrss_schema_url: https://git.tt-rss.org/fox/tt-rss/raw/19.2/schema/ttrss_schema_pgsql.sql

ttrss_ldap_servername: "{{ openldap_ldap_servername }}"
ttrss_ldap_users_dn: "{{ openldap_ldap_structure_users_ou_dn }}"
ttrss_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
ttrss_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
ttrss_ldap_group_base: openldap_ldap_structure_groups_ou_dns['groups']

ttrss_smtp_host: "{{ zonemta_smtp_servername }}"
ttrss_smtp_port: 587
ttrss_smtp_user: "{{ zonemta_feeder_authentication_username }}"
ttrss_smtp_password: "{{ zonemta_feeder_authentication_password }}"
#  ssl, tls or empty
ttrss_smtp_secure: tls
ttrss_smtp_from: "noreply@{{ web_base_domain }}"
ttrss_smtp_displayName: "Tiny Tiny RSS"

homeassistant_mysql_user: homeassistant
homeassistant_mysql_database: homeassistant
homeassistant_mysql_password: clear_password
homeassistant_mysql_root_password: clear_password
homeassistant_mqtt_user: homeassistant
homeassistant_mqtt_password: clear_password
homeassistant_ldap_servername: "{{ openldap_ldap_servername }}"
homeassistant_ldap_users_dn: "{{ openldap_ldap_structure_users_ou_dn }}"

nodered_context_root: /
nodered_ldap_servername: "{{ openldap_ldap_servername }}"
nodered_ldap_users_dn: "{{ openldap_ldap_structure_users_ou_dn }}"
nodered_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
nodered_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
nodered_ldap_group_base: openldap_ldap_structure_groups_ou_dns['groups']

# First listener is used as default
mosquitto_listeners: 
  - port: 1883
    secure: False
    websocket: False

# password generated with mosquitto_passwd
mosquitto_credientials: 
#  credentials:
#      user / Passw0rd
    - user:$6$iHdTqa9599orI9G2$/MPMDSugrFk98BUPguy/ap7gVStgB3sUYS1pQTdWcT6CFNz+8DcbMfL0pyiUpEjTpTHufPzbxAUXSzOYybiDgg==

# Cf https://github.com/mKeRix/room-assistant/wiki/Configuration
roomassistant_environment_variables:
  SERVICES: mqtt,shell
  ROOM: example-room
  AUTO_DISCOVERY: true
  MQTT_URL: mqtt://mosquitto
  MQTT_USERNAME: user
  MQTT_PASSWORD: Passw0rd
  MQTT_REJECT_UNAUTHORIZED: true
  SHELL_COMMANDS: >
    [
      {
        \"channel\": \"example-script\",
        \"command\": \"echo $(($RANDOM%100))\",
        \"cron\": \"*/30 * * * * *\",
        \"number\": true,
        \"discoveryType\": \"sensor\",
        \"discoveryConfig\": {
          \"name\": \"Test RoomAssistant\",
          \"unit_of_measurement\": \"%\",
          \"value_template\": \"{{ '{{' }} value_json.value {{ '}}' }}\"
        }
      }
    ]

airsonic_context_path: /airsonic
airsonic_extra_java_opts:
  # https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-use-tomcat-behind-a-proxy-server
  - -Dserver.use-forward-headers=true
  - -Dairsonic.defaultMusicFolder=/mnt/multimetia/Music
  - -Dairsonic.defaultPodcastFolder=/mnt/multimetia/Podcasts
airsonic_ldap_servername: "{{ openldap_ldap_servername }}"
airsonic_ldap_users_dn: "{{ openldap_ldap_structure_users_ou_dn }}"
airsonic_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
airsonic_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
airsonic_ldap_group_base: openldap_ldap_structure_groups_ou_dns['groups']
airsonic_smtp_host: "{{ zonemta_smtp_servername }}"
airsonic_smtp_port: 587
# STARTTLS, SSL/TLS, or anything else
airsonic_smtp_encryption: STARTTLS
airsonic_smtp_user: "{{ zonemta_feeder_authentication_username }}"
airsonic_smtp_password: "{{ zonemta_feeder_authentication_password }}"
airsonic_smtp_from: "noreply@{{ web_base_domain }}"

# Look at the README.md to find out how to get your token
#plex_plex_token: 

gitlab_context_path: /gitlab
gitlab_external_url: "https://gitlab.domain{{ gitlab_context_path }}"
gitlab_time_zone: "{{ time_zone }}"
gitlab_backup_keep_time: "604800"

# Email configuration.
gitlab_email_enabled: "true"
gitlab_email_from: "gitlab@{{ web_base_domain }}"
gitlab_email_display_name: "Gitlab"
gitlab_email_reply_to: "gitlab{{ web_base_domain }}"
gitlab_email_subject_suffix: "[Gitlab] "
gitlab_smtp_enable: "true"
gitlab_smtp_address: "{{ zonemta_smtp_servername }}"
gitlab_smtp_port: 587
gitlab_smtp_authentication: "login"
gitlab_smtp_user_name: "{{ zonemta_feeder_authentication_username }}"
gitlab_smtp_password: "{{ zonemta_feeder_authentication_password }}"
#gitlab_smtp_domain: "example.com"
gitlab_smtp_enable_starttls_auto: "true"
gitlab_smtp_tls: "false"
#gitlab_smtp_openssl_verify_mode: 'peer'
gitlab_ldap_servername: "{{ openldap_ldap_servername }}"

prometheus_allowed_namespaces:
  - default
  - kube-system
  - ingress-nginx
  - monitoring
  - logging

alertmanager_alerts_smtp_enabled: True
alertmanager_alerts_smtp_smarthost: "{{ zonemta_smtp_servername }}:587"
alertmanager_alerts_smtp_require_tls: true
alertmanager_alerts_smtp_from: "alertmanager@{{ web_base_domain }}"
alertmanager_alerts_smtp_auth_username: "{{ zonemta_feeder_authentication_username }}"
alertmanager_alerts_smtp_auth_password: "{{ zonemta_feeder_authentication_password }}"
#alertmanager_alerts_default_receiver: default
#alertmanager_alerts_receivers: 
# - name: "{{ alertmanager_alerts_default_receiver }}"
#   emails_to: 
#     - whatever@gmail.com

grafana_admin_user: admin
grafana_admin_password: clear_password
grafana_ldap_servername: "{{ openldap_ldap_servername }}"
grafana_ldap_base: "{{ openldap_ldap_basedn }}"
grafana_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
grafana_ldap_manager_password: "{{ openldap_ldap_admin_password }}"

# TODO : these user / passwords can't easily be changed without wiping the ES cluster.
# We probably need to run /usr/share/elasticsearch/plugins/opendistro_security/tools/securityadmin.sh inside the container
logging_elasticsearch_internal_users: []
#  - name: userName
#    password: clear_password
#    readonly: True
#    roles: 
#      - role1
#      - role2
logging_elasticsearch_ldap_servername: "{{ openldap_ldap_servername }}"
logging_elasticsearch_ldap_manager_dn: "{{ openldap_ldap_admin_dn }}"
logging_elasticsearch_ldap_manager_password: "{{ openldap_ldap_admin_password }}"
logging_elasticsearch_ldap_users_dn: "{{ openldap_ldap_structure_users_ou_dn }}"
elasticsearch_exposed_namespaces:
  - logging

logging_kibana_valid_certs: True
logging_kibana_export_saved_script_path: "{{ standard_user.home }}/tools/kibana_save_objects.py"
logging_kibana_export_saved_output_dir: "{{ standard_user.home }}/kibana_saved_objects"
