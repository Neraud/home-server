apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deluge
  namespace: default
  labels:
    app: deluge
    app-component: deluge
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: deluge
      app-component: deluge
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: deluge
        app-component: deluge
    spec:
      initContainers:
      - name: inject-config
        image: linuxserver/deluge:amd64-2.0.3-2201906121747ubuntu18.04.1-ls27
        command: [ "python3", "/tmp/config/mergeConf.py" ]
        volumeMounts:
        - name: deluge-config-pv-claim
          mountPath: /config
        - name: deluge-config
          mountPath: /tmp/config
      containers:
      - image: linuxserver/deluge:amd64-2.0.3-2201906121747ubuntu18.04.1-ls27
        name: deluge
        ports:
        - containerPort: 8112
          name: webui
        resources:
          requests:
            cpu: "{{ deluge_requests_cpu | default("100m") }}"
            memory: "{{ deluge_requests_memory | default("256Mi") }}"
          limits:
            cpu: "{{ deluge_limits_cpu | default("200m") }}"
            memory: "{{ deluge_limits_memory | default("256Mi") }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: deluge-config-pv-claim
          mountPath: /config
        - name: deluge-download
          mountPath: /mnt/download
        # deluge-config is not used by the container directly
        # But mounting it enables the use of the reloader
        - name: deluge-config
          mountPath: /tmp/config
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: deluge-config
        configMap:
          name: deluge-config
      - name: deluge-download
        persistentVolumeClaim:
          claimName: nfs-download
      nodeSelector:
        capability/general-purpose: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: deluge-config-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_glusterfs_storage_class_name }}
      resources:
        requests:
          storage: 256M
      selector:
        matchLabels:
          app: deluge
          app-component: deluge
