apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zonemta
      app.kubernetes.io/component: mongo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zonemta
        app.kubernetes.io/component: mongo
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: mongo
        image: "registry.lan/zonemta-mongo:7.0.8-jammy"
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: mongo-env
        ports:
        - containerPort: 27017
          name: mongo
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        # With mongodb 6, the mongo cli has been replaced by mongosh
        # However, mongosh is TOO slow (issue : https://jira.mongodb.org/browse/MONGOSH-1240) and can't be used for our probe
        # (timed at around 20 sec on the vagrant test env)
        # TODO : revisit this once the issue is fixed
        #readinessProbe:
        #  exec:
        #    command:
        #    - mongosh
        #    - --eval
        #    - "db.adminCommand('ping')"
        #  timeoutSeconds: 5
        #  initialDelaySeconds: 10
        #  periodSeconds: 10
        resources:
          requests:
            cpu: 25m
            memory: 384Mi
          limits:
            cpu: 100m
            memory: 384Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - mountPath: /tmp
          name: tmp-volume
        - name: mongo-data
          mountPath: /data/db
          subPath: db
        - name: mongo-data
          mountPath: /data/configdb
          subPath: configdb
        - name: mongo-init
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-data
      - name: tmp-volume
        emptyDir: {}
      - name: mongo-init
        secret:
          secretName: mongo-init
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
