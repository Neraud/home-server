apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-replicator
  labels:
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: replicator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-replicator
      app.kubernetes.io/instance: replicator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-replicator
        app.kubernetes.io/instance: replicator
    spec:
      serviceAccountName: kubernetes-replicator
      containers:
      - name: kubernetes-replicator
        image: quay.io/mittwald/kubernetes-replicator:v2.8.0
        imagePullPolicy: IfNotPresent
        args: []
        ports:
        - name: health
          containerPort: 9102
          protocol: TCP
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000 # random uid
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
              - ALL
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 32Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
      nodeSelector:
        capability/general-purpose: 'yes'
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
