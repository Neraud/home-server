apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: grafana
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 472 # grafana
        fsGroup: 472
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      containers:
      - image: "registry.lan/grafana:9.4.7"
        name: grafana
        envFrom:
        - configMapRef:
            name: grafana-env
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 96Mi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
          subPath: data
        - mountPath: /etc/grafana/ldap.toml
          name: grafana-config
          subPath: ldap.toml
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboard-providers
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/kube-prometheus-1
          name: grafana-dashboards-kube-prometheus-1
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/kube-prometheus-2
          name: grafana-dashboards-kube-prometheus-2
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/custom
          name: grafana-dashboards-custom
          readOnly: false
        - name: cluster-ca
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
        - mountPath: /tmp
          name: tmp-plugins
          readOnly: false
      nodeSelector:
        kubernetes.io/os: linux
        capability/general-purpose: 'yes'
      serviceAccountName: grafana
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-data
      - name: grafana-config
        secret:
          secretName: grafana-config
      - name: grafana-datasources
        secret:
          secretName: grafana-datasources
      - name: grafana-dashboard-providers
        configMap:
          name: grafana-dashboard-providers
      - name: grafana-dashboards-kube-prometheus-1
        configMap:
          name: grafana-dashboards-kube-prometheus-1
      - name: grafana-dashboards-kube-prometheus-2
        configMap:
          name: grafana-dashboards-kube-prometheus-2
      - name: grafana-dashboards-custom
        configMap:
          name: grafana-dashboards-custom
      - name: cluster-ca
        secret:
          secretName: cluster-ca
      - emptyDir:
          medium: Memory
        name: tmp-plugins
      imagePullSecrets:
      - name: docker-config
