apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/component: jellyfin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/component: jellyfin
    spec:
      initContainers:
      - name: create-folders
        image: "registry.lan/jellyfin-busybox:1.36.0"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /jellyfin/config
            chown 1000:1000 /jellyfin/config
        volumeMounts:
        - name: jellyfin-data
          mountPath: /jellyfin
      - name: inject-conf
        image: "registry.lan/jellyfin-conf-injection:3.11.1-alpine3.17"
        imagePullPolicy: Always
        volumeMounts:
        - name: jellyfin-inject-config
          mountPath: /config-source
        - name: jellyfin-data
          mountPath: /config-target
          subPath: config
      - name: inject-certificate
        image: "registry.lan/jellyfin-conf-injection:3.11.1-alpine3.17"
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - |
            cp /etc/ssl/certs/ca-certificates.crt /tmp-cert
            cat /etc/ssl/cluster/ca.crt >> /tmp-cert/ca-certificates.crt
        volumeMounts:
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
        - name: tmp-cert-volume
          mountPath: /tmp-cert
      containers:
      - name: jellyfin
        image: "registry.lan/jellyfin:10.8.9-amd64-custom"
        ports:
        - containerPort: 8096
          name: jellyfin
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: jellyfin
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: "1"
            memory: 512Mi
            # To use a gpu limit
            #gpu.intel.com/i915: 1
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: jellyfin-data
          mountPath: /config
          subPath: config
        - name: tmp-cache-volume
          mountPath: /cache
        - name: tmp-transcodes-volume
          mountPath: /config/transcodes
        - name: jellyfin-multimedia
          mountPath: /media
        - name: tmp-cert-volume
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca-certificates.crt
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-data
      - name: jellyfin-inject-config
        secret:
          secretName: jellyfin-inject-config
      - name: jellyfin-multimedia
        persistentVolumeClaim:
          claimName: nfs-multimedia
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: tmp-volume
        emptyDir: {}
      - name: tmp-cert-volume
        emptyDir: {}
      - name: tmp-cache-volume
        emptyDir: {}
      - name: tmp-transcodes-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
