apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: elasticsearch
      app.kubernetes.io/instance: k8s-logs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: elasticsearch
        app.kubernetes.io/instance: k8s-logs
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 # opensearch
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: elasticsearch
        image: "registry.lan/opensearch:2.6.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9300
          name: transport
        - containerPort: 9200
          name: web
        - containerPort: 9600
          name: metrics
        securityContext:
          #readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
            #add:
            #  - SYS_CHROOT
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
          limits:
            cpu: 750m
            memory: 1Gi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: elasticsearch-data
          mountPath: /usr/share/opensearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
        - name: elasticsearch-security
          mountPath: /usr/share/opensearch/plugins/opensearch-security/securityconfig
        - name: certs-volume
          mountPath: /usr/share/opensearch/config/certs
        - name: cluster-ca-volume
          mountPath: /usr/share/opensearch/plugins/opensearch-security/cluster/ca.crt
          subPath: ca.crt
        envFrom:
        - configMapRef:
            name: elasticsearch-env
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: PROCESSORS
            valueFrom:
              resourceFieldRef:
                divisor: '1'
                resource: limits.cpu
      initContainers:
      - name: fix-permissions
        image: "registry.lan/elasticsearch-busybox:1.36.1"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/opensearch/data"]
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          privileged: true
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/opensearch/data
      - name: increase-vm-max-map
        image: "registry.lan/elasticsearch-busybox:1.36.1"
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          privileged: true
      - name: increase-fd-ulimit
        image: "registry.lan/elasticsearch-busybox:1.36.1"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          privileged: true
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
      - name: elasticsearch-security
        secret:
          secretName: elasticsearch-security
      - name: certs-volume
        secret:
          secretName: elasticsearch-certs
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
