apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-exporter
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: exporter
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
        fsGroup: 65534
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: elastic-exporter
        image: "registry.lan/elasticsearch_exporter:1.1.0"
        envFrom:
        - secretRef:
            name: exporter-env
        env:
        - name: "ES_ALL"
          value: "true"
        - name: "ES_SSL_SKIP_VERIFY"
          value: "false"
        - name: "ES_CA"
          value: "/etc/ssl/cluster/ca.crt"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 9114
          initialDelaySeconds: 30
          timeoutSeconds: 10
        ports:
        - containerPort: 9114
          name: metrics
        readinessProbe:
          httpGet:
            path: /health
            port: 9114
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 25m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      restartPolicy: Always
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
