apiVersion: batch/v1
kind: Job
metadata:
  name: init-job
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: init-job
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: init-job
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      
      volumes:
        - name: minio-configuration
          projected:
            sources:
              - configMap:
                  name: init-scripts
              - secret:
                  name: minio
        - name: minio-custom-scripts
          projected:
            sources:
              - secret:
                  name: custom-scripts
        - name: tmp-volume
          emptyDir: {}

      initContainers:
        - name: wait-for-requirements
          image: "registry.lan/minio:RELEASE.2024-10-29T16-01-48Z"
          imagePullPolicy: IfNotPresent
          command: 
            - "sh"
            - "-c"
            - |
              echo "Waiting for MinIO"
              timeout 120s sh -c "while ! curl -s -o /dev/null -m2 http://${MINIO_ENDPOINT}:${MINIO_PORT} ; do echo 'Still waiting ...' ; sleep 5 ; done"
              ret=$?
              if [ $ret -eq 0 ] ; then
                echo "MinIO has started"
              else
                echo "FAILED : MinIO isn't available"
                exit 1
              fi
          env:
            - name: MINIO_ENDPOINT
              value: minio
            - name: MINIO_PORT
              value: "9000"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      containers:
        - name: minio-make-bucket
          image: "registry.lan/minio-mc:RELEASE.2024-10-29T15-34-59Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/custom/initialize" ]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: MINIO_ENDPOINT
              value: minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: tmp-volume
              mountPath: /etc/minio
              subPath: minio
            - name: tmp-volume
              mountPath: /tmp
              subPath: tmp
            - name: minio-configuration
              mountPath: /config
            - name: minio-custom-scripts
              mountPath: /custom
          resources:
            requests:
              cpu: 25m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
        - name: minio-make-user
          image: "registry.lan/minio-mc:RELEASE.2024-10-29T15-34-59Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/custom/add-user" ]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: MINIO_ENDPOINT
              value: minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: tmp-volume
              mountPath: /etc/minio
              subPath: minio
            - name: tmp-volume
              mountPath: /tmp
              subPath: tmp
            - name: minio-configuration
              mountPath: /config
            - name: minio-custom-scripts
              mountPath: /custom
          resources:
            requests:
              cpu: 25m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
        - name: minio-make-policy
          image: "registry.lan/minio-mc:RELEASE.2024-10-29T15-34-59Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/custom/add-policy" ]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: MINIO_ENDPOINT
              value: minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: tmp-volume
              mountPath: /etc/minio
              subPath: minio
            - name: tmp-volume
              mountPath: /tmp
              subPath: tmp
            - name: minio-configuration
              mountPath: /config
            - name: minio-custom-scripts
              mountPath: /custom
          resources:
            requests:
              cpu: 25m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
        - name: minio-make-svcacct
          image: "registry.lan/minio-mc:RELEASE.2024-10-29T15-34-59Z"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "/custom/add-svcacct"]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: MINIO_ENDPOINT
              value: minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: tmp-volume
              mountPath: /etc/minio
              subPath: minio
            - name: tmp-volume
              mountPath: /tmp
              subPath: tmp
            - name: minio-configuration
              mountPath: /config
            - name: minio-custom-scripts
              mountPath: /custom
          resources:
            requests:
              cpu: 25m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
      nodeSelector:
        capability/general-purpose: 'yes'
