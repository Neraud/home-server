apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paperless
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: paperless
      app.kubernetes.io/component: paperless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: paperless
        app.kubernetes.io/component: paperless
    spec:
      initContainers:
      - name: create-folders
        image: "registry.lan/paperless-busybox:1.36.0"
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /mnt/paperless-data/data
            chown -R 1000:1000 /mnt/paperless-data/data
        volumeMounts:
        - name: paperless-data
          mountPath: /mnt/paperless-data
      containers:
      - name: paperless
        image: "registry.lan/paperless-ngx:1.13.0-custom"
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: paperless-env
        ports:
        - containerPort: 8000
          name: web
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000 # paperless
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: web
            httpHeaders:
              - name: Host
                value: "paperless.tool.intra.web_domain_name"
        resources:
          requests:
            cpu: 75m
            memory: 256Mi
          limits:
            cpu: 750m
            memory: 1G
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: paperless-data
          mountPath: /usr/src/paperless/data
          subPath: data
        - name: paperless-papers
          mountPath: /mnt/consume
          subPath: paperless/consume
        - name: paperless-papers
          mountPath: /usr/src/paperless/media
          subPath: paperless/media
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: paperless-data
        persistentVolumeClaim:
          claimName: paperless-data
      - name: paperless-config
        configMap:
          name: paperless-config
      - name: paperless-papers
        persistentVolumeClaim:
          claimName: nfs-papers
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
