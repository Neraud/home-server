apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: k8s
spec:
  alerting:
    alertmanagers:
    - name: alertmanager-k8s
      namespace: monitoring-prometheus
      port: web
  enableFeatures: []
  image: registry.lan/prometheus:v3.2.1
  imagePullSecrets:
  - name: docker-config
  podMetadata:
    labels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
  nodeSelector:
    kubernetes.io/os: linux
    capability/general-purpose: 'yes'
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  replicas: 1
  externalUrl: https://prometheus.monitoring.intra.web_domain_name/
  resources:
    limits:
      cpu: 400m
      memory: 1536Mi
    requests:
      cpu: 100m
      memory: 1024Mi
  ruleNamespaceSelector: {}
  ruleSelector: {}
  scrapeConfigNamespaceSelector: {}
  scrapeConfigSelector: {}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    # TODO : readOnlyRootFilesystem is present in the CRD, but it doesn't get injected at the container level
    # I guess this section is only applied at the POD level.
    #readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  retention: 2d
  storage:
    volumeClaimTemplate:
      metadata:
        name: prometheus-k8s-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: longhorn-low-durability
        resources:
          requests:
            storage: 4Gi
