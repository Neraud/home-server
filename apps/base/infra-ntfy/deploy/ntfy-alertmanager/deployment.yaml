apiVersion: apps/v1
kind: Deployment
metadata:
  name: ntfy-alertmanager
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ntfy
      app.kubernetes.io/component: ntfy-alertmanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ntfy
        app.kubernetes.io/component: ntfy-alertmanager
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
        fsGroup: 65534
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: ntfy-alertmanager
        image: "registry.lan/ntfy-alertmanager:0.5.0"
        imagePullPolicy: IfNotPresent
        args: 
        - "--config"
        - "/etc/ntfy-alertmanager/config.scfg"
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 40m
            memory: 32Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: ntfy-alertmanager-config
          mountPath: /etc/ntfy-alertmanager/config.scfg
          subPath: config.scfg
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: ntfy-alertmanager-config
        secret:
          secretName: ntfy-alertmanager-config
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
