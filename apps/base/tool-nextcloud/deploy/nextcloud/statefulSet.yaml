apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nextcloud
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
      app.kubernetes.io/component: nextcloud
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nextcloud
        app.kubernetes.io/component: nextcloud
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 33 # www-data
        fsGroup: 33
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: create-folders
        image: "registry.lan/nextcloud-busybox:1.37.0"
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /mnt/nextcloud-app/config
            mkdir -p /mnt/nextcloud-app/custom_apps
            mkdir -p /mnt/nextcloud-app/themes
            chown -R 33:33 /mnt/nextcloud-app/*

            mkdir -p /mnt/nextcloud-data/data
            # Requires no_root_squash on the NFS export
            chown 33:33 /mnt/nextcloud-data/data
            chmod 0770 /mnt/nextcloud-data/data
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: nextcloud-app
          mountPath: /mnt/nextcloud-app
        - name: nextcloud-data
          mountPath: /mnt/nextcloud-data
      - name: wait-for-requirements
        image: "registry.lan/nextcloud-busybox:1.37.0"
        imagePullPolicy: IfNotPresent
        command: 
          - "sh"
          - "-c"
          - |
            echo "Waiting for Mysql DB"
            timeout 120s sh -c "while ! nc -z -w 0 mysql 3306 ; do echo 'Still waiting ...' ; sleep 5 ; done"
            ret=$?
            echo "return : $ret"
            if [ $ret -eq 0 ] ; then
              echo "MySQL DB Server has started"
            else
              echo "FAILED : MySQL DB Server isn't available"
              exit 1
            fi
            
            echo "Waiting for Redis"
            timeout 30s sh -c "while ! nc -z -w 0 redis 6379 ; do echo 'Still waiting ...' ; sleep 5 ; done"
            ret=$?
            echo "return : $ret"
            if [ $ret -eq 0 ] ; then
              echo "Redis Server has started"
            else
              echo "FAILED : Redis Server isn't available"
              exit 1
            fi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      containers:
      - name: nextcloud
        image: "registry.lan/nextcloud:31.0.2-apache-custom"
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: nextcloud-env
        ports:
        - containerPort: 8080
          name: web
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /status.php
            port: web
            httpHeaders:
              - name: Host
                value: "nextcloud.tool.intra.web_domain_name"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 750m
            memory: 512Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: nextcloud-app
          mountPath: /usr/src/nextcloud/config
          subPath: config
        - name: nextcloud-app
          mountPath: /usr/src/nextcloud/custom_apps
          subPath: custom_apps
        - name: nextcloud-app
          mountPath: /usr/src/nextcloud/themes
          subPath: themes
        - name: nextcloud-data
          mountPath: /usr/src/nextcloud/data
          subPath: data
        - name: nextcloud-config
          mountPath: /usr/src/nextcloud/config_custom/smtp_custom.config.php
          subPath: smtp_custom.config.php
        - name: nextcloud-config
          mountPath: /etc/ldap/ldap.conf
          subPath: ldap.conf
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: nextcloud-app
        persistentVolumeClaim:
          claimName: nextcloud-app
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nfs-nextcloud
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: nextcloud-config
        configMap:
          name: nextcloud-config
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
