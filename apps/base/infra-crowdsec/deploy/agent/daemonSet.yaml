apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crowdsec
      app.kubernetes.io/component: agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crowdsec
        app.kubernetes.io/component: agent
    spec:
      securityContext:
        # Run as root to be able to read host logs
        runAsNonRoot: false
        #runAsUser: 65534 # nobody
        #fsGroup: 65534
        #fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: wait-for-requirements
        image: "registry.lan/crowdsec-busybox:1.36.1"
        imagePullPolicy: IfNotPresent
        command: 
          - "sh"
          - "-c"
          - |
            echo "Waiting for LAPI"
            timeout 120s sh -c "while ! nc -z -w 0 lapi 8080 ; do echo 'Still waiting ...' ; sleep 5 ; done"
            ret=$?
            echo "return : $ret"
            if [ $ret -eq 0 ] ; then
              echo "LAPI has started"
            else
              echo "FAILED : LAPI isn't available"
              exit 1
            fi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      containers:
      - name: agent
        image: "registry.lan/crowdsec:v1.6.2-debian"
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: agent-env
        ports:
        - containerPort: 6060
          name: metrics
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 64Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: crowdsec-ca-certs
          mountPath: /etc/ssl/crowdsec
        - name: agent-cert-volume
          mountPath: /etc/ssl/crowdsec/agent
          readOnly: true
        - name: etc-volume
          mountPath: /etc/crowdsec
        - name: data-volume
          mountPath: /var/lib/crowdsec/data
        - name: staging-data-volume
          mountPath: /staging/var/lib/crowdsec/data
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: crowdsec-ca-certs
        secret:
          secretName: crowdsec-ca-certs
      - name: agent-cert-volume
        hostPath:
          path: /etc/ssl/crowdsec_host/agent
      - name: tmp-volume
        emptyDir: {}
      - name: etc-volume
        emptyDir: {}
      - name: data-volume
        emptyDir: {}
      - name: staging-data-volume
        emptyDir: {}
      - name: varlog
        hostPath:
          path: /var/log
      imagePullSecrets:
      - name: docker-config
