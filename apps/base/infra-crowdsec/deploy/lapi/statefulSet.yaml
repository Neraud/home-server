apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lapi
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crowdsec
      app.kubernetes.io/component: lapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crowdsec
        app.kubernetes.io/component: lapi
    spec:
      initContainers:
      - name: create-folders
        image: "registry.lan/crowdsec-busybox:1.36.0"
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /mnt/crowdsec-config/crowdsec
            mkdir -p /mnt/crowdsec-db/data
            
            # We can't use the secret directly in the main container, files must be owned by nobody
            mkdir /mnt/crowdsec-config/crowdsec/notifications/
            cp /mnt/crowdsec/profiles.yaml /mnt/crowdsec-config/crowdsec/
            cp /mnt/crowdsec_secret/notification_elasticsearch.yaml /mnt/crowdsec-config/crowdsec/notifications/elasticsearch.yaml
            
            chown -R 65534:65534 /mnt/crowdsec-config/crowdsec
            chown -R 65534:65534 /mnt/crowdsec-db/data
        volumeMounts:
        - name: crowdsec-config
          mountPath: /mnt/crowdsec-config
        - name: crowdsec-db
          mountPath: /mnt/crowdsec-db
        - name: lapi-config-secret
          mountPath: /mnt/crowdsec_secret
        - name: lapi-config
          mountPath: /mnt/crowdsec
      - name: fix-permissions
        image: "registry.lan/crowdsec:v1.4.6-debian"
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            # Copy plugins under TMP and chown them
            # Fixes "api server init: unable to run local API: while loading plugin: plugin at /usr/local/lib/crowdsec/plugins/notification-email is not owned by user 'nobody'"
            cp -R /usr/local/lib/crowdsec/plugins /tmp/
            chown -R 65534:65534 /tmp/
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      containers:
      - name: lapi
        image: "registry.lan/crowdsec:v1.4.6-debian"
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: lapi-env
        - secretRef:
            name: lapi-env
        ports:
        - containerPort: 8080
          name: lapi
        - containerPort: 6060
          name: metrics
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534 # nobody
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          privileged: false
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          httpGet:
            port: lapi
            path: /health
            scheme: HTTPS
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          httpGet:
            port: lapi
            path: /health
            scheme: HTTPS
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 30
          periodSeconds: 10
          successThreshold: 1
          httpGet:
            port: lapi
            path: /health
            scheme: HTTPS
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            cpu: 400m
            memory: 128Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: crowdsec-ca-certs
          mountPath: /etc/ssl/crowdsec
        - name: lapi-certs
          mountPath: /etc/ssl/crowdsec/server
        - name: crowdsec-config
          mountPath: /etc/crowdsec
          subPath: crowdsec
        - name: crowdsec-db
          mountPath: /var/lib/crowdsec/data
          subPath: data
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: crowdsec-db
        persistentVolumeClaim:
          claimName: crowdsec-db
      - name: crowdsec-config
        persistentVolumeClaim:
          claimName: crowdsec-config
      - name: crowdsec-ca-certs
        secret:
          secretName: crowdsec-ca-certs
      - name: lapi-certs
        secret:
          secretName: lapi-certs
      - name: lapi-config
        configMap:
          name: lapi-config
      - name: lapi-config-secret
        secret:
          secretName: lapi-config
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
