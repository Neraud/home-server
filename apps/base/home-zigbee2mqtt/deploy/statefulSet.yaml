apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zigbee2mqtt
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zigbee2mqtt
      app.kubernetes.io/component: zigbee2mqtt
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zigbee2mqtt
        app.kubernetes.io/component: zigbee2mqtt
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 # node
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: create-folders
        image: "registry.lan/zigbee2mqtt:1.33.0"
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /mount/app/data

            if [ ! -f /mount/app/data/configuration.yaml ] ; then
              echo "Deploying default configuration"
              cp /app/configuration.yaml /mount/app/data/configuration.yaml
            fi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: zigbee2mqtt-data
          mountPath: /mount/app
      containers:
      - name: zigbee2mqtt
        image: "registry.lan/zigbee2mqtt:1.33.0"
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: zigbee2mqtt-env
        - secretRef:
            name: zigbee2mqtt-env
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: zigbee2mqtt-data
          mountPath: /app/data
          subPath: data
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.cert
          subPath: ca.crt
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: zigbee2mqtt-data
        persistentVolumeClaim:
          claimName: zigbee2mqtt-data
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      nodeSelector:
        capability/general-purpose: 'yes'
