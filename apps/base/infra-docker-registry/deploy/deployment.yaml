apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-registry
      app.kubernetes.io/component: registry
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry
        app.kubernetes.io/component: registry
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 # random uid
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: docker-registry
        image: "docker.io/library/registry:3.0.0"
        # Don't always pull to avoid issues when restarting (eg: dockerhub limit)
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5443
          name: https
        - containerPort: 5001
          name: debug
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: https
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: docker-registry-data
          mountPath: /var/lib/registry
        - name: docker-registry
          mountPath: /etc/distribution/config.yml
          subPath: config.yml
        - name: docker-registry
          mountPath: /etc/docker/registry/htpasswd
          subPath: htpasswd
        - name: certs-volume
          mountPath: /certs
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: docker-registry
        secret:
          secretName: docker-registry
      - name: certs-volume
        secret:
          secretName: docker-registry-certs
      - name: docker-registry-data
        persistentVolumeClaim:
          claimName: docker-registry-pv-claim
      nodeSelector:
        capability/general-purpose: 'yes'
