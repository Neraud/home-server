apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: discovery
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: syncthing
      app.kubernetes.io/component: discovery
  template:
    metadata:
      labels:
        app.kubernetes.io/name: syncthing
        app.kubernetes.io/component: discovery
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: discovery
        image: "registry.lan/syncthing-discosrv:1.24.0"
        command: [
          "/bin/entrypoint.sh", 
          "/bin/stdiscosrv", 
          "-http", 
          "-listen=:8080",
          "-metrics-listen=:8081",
          #"-debug",
        ]
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /metrics
            port: metrics
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            cpu: 200m
            memory: 32Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: discovery-data
          mountPath: /var/stdiscosrv
          subPath: stdiscosrv
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: discovery-data
        persistentVolumeClaim:
          claimName: discovery-data
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
