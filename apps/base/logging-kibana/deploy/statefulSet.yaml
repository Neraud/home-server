apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kibana
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/component: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/component: kibana
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 # opensearch-dashboards
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kibana
        image: "registry.lan/opensearch-dashboards:2.10.0"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 256Mi
        envFrom:
        - configMapRef:
            name: kibana-env
        ports:
        - name: http
          containerPort: 5601
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: kibana-config
          mountPath: /usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
          subPath: opensearch_dashboards.yml
        - name: kibana-data
          mountPath: /usr/share/opensearch-dashboards/data
          subPath: data
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: kibana-data
        persistentVolumeClaim:
          claimName: kibana-data
      - name: kibana-config
        secret:
          secretName: kibana-config
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
