apiVersion: apps/v1
kind: Deployment
metadata:
  name: reminiflux
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: miniflux
      app.kubernetes.io/component: reminiflux
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: miniflux
        app.kubernetes.io/component: reminiflux
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101 # nginx
        fsGroup: 101
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: reminiflux
        image: "registry.lan/reminiflux:153dc9464cef69f7c29bff1d680cfa0013b5e281-1.25.3-alpine3.18-slim"
        imagePullPolicy: IfNotPresent
        env:
        - name: NGINX_PORT
          value: "8080"
        - name: CONTEXT_ROOT
          value: "reminiflux"
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /reminiflux
            port: http
        resources:
          requests:
            cpu: 25m
            memory: 16Mi
          limits:
            cpu: 100m
            memory: 16Mi
        volumeMounts:
        - name: cluster-config
          mountPath: /etc/localtime
          subPath: localtime
          readOnly: true
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cluster-config
        configMap:
          name: cluster-config
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: tmp-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
