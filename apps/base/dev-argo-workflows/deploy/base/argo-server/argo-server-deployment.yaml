apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: argo-server
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows
      app.kubernetes.io/component: argo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-workflows
        app.kubernetes.io/component: argo-server
    spec:
      serviceAccountName: argo-server
      containers:
        - name: argo-server
          image: "registry.intra.k8s.test/argo-workflow-cli:v3.4.7"
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          args: 
            - server
            - --auth-mode=server
          env: []
          ports:
            - name: web
              containerPort: 2746
          readinessProbe:
            httpGet:
              port: 2746
              scheme: HTTPS
              path: /
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 64Mi
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
              readOnly: true
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tz-config
          hostPath:
            path: /etc/localtime
        - name: tmp
          emptyDir: { }
      securityContext:
        runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
        capability/general-purpose: 'yes'
