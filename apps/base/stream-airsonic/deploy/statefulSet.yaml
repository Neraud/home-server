apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airsonic
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airsonic
      app.kubernetes.io/component: airsonic
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airsonic
        app.kubernetes.io/component: airsonic
    spec:
      initContainers:
      - name: create-folders
        image: "registry.lan/airsonic-busybox:1.36.0"
        command:
          - "sh"
          - "-c"
          - |
            mkdir -p /airsonic/data
            chown -R 1000:1000 /airsonic/data
            mkdir -p /airsonic/playlists
            chown -R 1000:1000 /airsonic/playlists
        volumeMounts:
        - name: airsonic-data
          mountPath: /airsonic
      - name: inject-properties
        image: "registry.lan/airsonic-busybox:1.36.0"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        command:
          - "sh"
          - "-c"
          - |
            SOURCE=/config/airsonic.delta.properties
            TARGET=/airsonic/data/airsonic.properties
            PROPERTIES_TO_DEPLOY="^(Ldap|Smtp)"

            if [ ! -f "${TARGET}" ]; then
                echo "airsonic.properties doesn't exist yet, deploying the delta as is"
                cp ${SOURCE} ${TARGET}
            else
                echo "airsonic.properties exists, merging the delta"
                mv ${TARGET} ${TARGET}.orig
                grep -Ev "${PROPERTIES_TO_DEPLOY}" ${TARGET}.orig >${TARGET}
                grep -E "${PROPERTIES_TO_DEPLOY}" ${SOURCE} >>${TARGET}
            fi

            chmod 775 ${TARGET}
            echo "Finished"
        volumeMounts:
        - name: airsonic-data
          mountPath: /airsonic/data
          subPath: data
        - name: airsonic-inject-config
          mountPath: /config
      - name: inject-certificates
        image: "registry.lan/airsonic-advanced:edge-11.0.0-SNAPSHOT.20220625052932"
        command:
          - "sh"
          - "-c"
          - |
            cp /opt/java/openjdk/lib/security/cacerts /opt/java/openjdk/lib/security_target/cacerts
            /opt/java/openjdk/bin/keytool \
              -importcert -noprompt \
              -keystore /opt/java/openjdk/lib/security_target/cacerts -storepass changeit \
              -alias cluster -file /etc/ssl/cluster/ca.crt
        volumeMounts:
        - name: keystore-volume
          mountPath: /opt/java/openjdk/lib/security_target
        - name: cluster-ca-volume
          mountPath: /etc/ssl/cluster/ca.crt
          subPath: ca.crt
      containers:
      - name: airsonic
        image: "registry.lan/airsonic-advanced:edge-11.0.0-SNAPSHOT.20220625052932"
        imagePullPolicy: IfNotPresent        
        ports:
        - containerPort: 4040
          name: airsonic
        envFrom:
        - configMapRef:
            name: airsonic-env
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /rest/ping
            port: airsonic
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: "1"
            memory: 512Mi
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: keystore-volume
          mountPath: /opt/java/openjdk/lib/security/cacerts
          subPath: cacerts
        - name: airsonic-data
          mountPath: /var/airsonic
          subPath: data
        - name: airsonic-data
          mountPath: /var/playlists
          subPath: playlists
        - name: airsonic-multimedia
          mountPath: /mnt/multimedia
        # airsonic-inject-config is not used by the container directly
        # But mounting it enables the use of the reloader
        - name: airsonic-inject-config
          mountPath: /config
        - name: tmp-volume
          mountPath: /tmp
        - name: transcode-volume
          mountPath: /var/airsonic/transcode
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: airsonic-data
        persistentVolumeClaim:
          claimName: airsonic-data
      - name: airsonic-inject-config
        secret:
          secretName: airsonic-inject-config
          defaultMode: 0555
      - name: airsonic-multimedia
        persistentVolumeClaim:
          claimName: nfs-multimedia
      - name: cluster-ca-volume
        secret:
          secretName: cluster-ca
      - name: keystore-volume
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      - name: transcode-volume
        emptyDir: {}
      imagePullSecrets:
      - name: docker-config
      nodeSelector:
        capability/general-purpose: 'yes'
