apiVersion: apps/v1
kind: Deployment
metadata:
  name: ttrss
  namespace: default
  labels:
    app: ttrss
    app-component: ttrss
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: ttrss
      app-component: ttrss
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ttrss
        app-component: ttrss
    spec:
      containers:
      # Keep the image version in sync with the ttrss_schema_url variable
      - image: linuxserver/tt-rss:amd64-19.2-ls6
        name: ttrss
        env:
        - name: DB_TYPE
          value: pgsql
        - name: DB_HOST
          value: ttrss-pgsql
        - name: DB_USER
          value: "{{ ttrss_pqsql_user }}"
        - name: DB_NAME
          value: "{{ ttrss_pqsql_database }}"
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: ttrss-pgsql-pass
              key: password
        - name: DB_PORT
          value: "5432"
        - name: SELF_URL_PATH
          value: "https://web.{{ web_base_domain }}{{ ttrss_context_root }}/"
        ports:
        - containerPort: 80
          name: ttrss
        resources:
          requests:
            cpu: "{{ ttrss_ttrss_requests_cpu | default("100m") }}"
            memory: "{{ ttrss_ttrss_requests_memory | default("32Mi") }}"
          limits:
            cpu: "{{ ttrss_ttrss_limits_cpu | default("200m") }}"
            memory: "{{ ttrss_ttrss_limits_memory | default("32Mi") }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: nginx-site-config-file
          mountPath: /config/nginx/site-confs/
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: nginx-site-config-file
        configMap:
          name: ttrss-config
          items:
          - key: nginx_site_config
            path: default
      nodeSelector:
        capability/general-purpose: 'yes'
