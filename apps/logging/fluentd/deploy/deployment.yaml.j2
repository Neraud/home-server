apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd
  namespace: logging
  labels:
    app: fluentd
    app-component: fluentd
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fluentd
      app-component: fluentd
  template:
    metadata:
      labels:
        app: fluentd
        app-component: fluentd
    spec:
      containers:
      - name: fluentd
        image: {{ kubernetes_registry_url }}/fluentd
        ports:
        - containerPort: 24224
          name: fluentd
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "https"
          - name: FLUENT_ELASTICSEARCH_USER
            value: "{{ logging_fluentd_elasticsearch_user }}"
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: "{{ logging_fluentd_elasticsearch_password }}"
          - name: SSL_CERT_FILE
            value: "/etc/elasticsearch/ssl/ca.crt"
        resources:
          requests:
            cpu: "{{ fluentd_requests_cpu | default("100m") }}"
            memory: "{{ fluentd_requests_memory | default("200Mi") }}"
          limits:
            cpu: "{{ fluentd_limits_cpu | default("500m") }}"
            memory: "{{ fluentd_limits_memory | default("200Mi") }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: fluentd-config
          mountPath: /fluentd/etc/
        - name: fluentd-includes
          mountPath: /fluentd/etc/conf.d
        - name: certs-volume
          mountPath: /etc/elasticsearch/ssl/ca.crt
          subPath: ca.crt
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: fluentd-includes
        configMap:
          name: fluentd-includes
      - name: certs-volume
        secret:
          secretName: elasticsearch-ca
      nodeSelector:
        capability/general-purpose: 'yes'
