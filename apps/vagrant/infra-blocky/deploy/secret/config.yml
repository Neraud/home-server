upstream:
    # these external DNS resolvers will be used. Blocky picks 2 random resolvers from the list for each query
    # format for resolver: [net:]host:[port][/path]. net could be empty (default, shortcut for tcp+udp), tcp+udp, tcp, udp, tcp-tls or https (DoH). If port is empty, default port will be used (53 for udp and tcp, 853 for tcp-tls, 443 for https (Doh))
    # this configuration is mandatory, please define at least one external DNS resolver
    default:
        - 1.1.1.1
        - 1.0.0.1
# optional: timeout to query the upstream resolver. Default: 2s
upstreamTimeout: 2s
# optional: custom IP address(es) for domain name (with all sub-domains). Multiple addresses must be separated by a comma
# example: query "printer.lan" or "my.printer.lan" will return 192.168.178.3
customDNS:
    customTTL: 1h
    mapping:
        master-test-1: 192.168.100.11
        master-test-2: 192.168.100.12
        master-test-3: 192.168.100.13
        node-test-home: 192.168.100.14
        registry.lan: 192.168.100.27
        auth.k8s.test: 192.168.100.100
        auth.intra.k8s.test: 192.168.100.101
        registry.intra.k8s.test: 192.168.100.101
        infra.k8s.test: 192.168.100.100
        infra.intra.k8s.test: 192.168.100.101
        log.intra.k8s.test: 192.168.100.101
        monitoring.intra.k8s.test: 192.168.100.101
        web.k8s.test: 192.168.100.100
        tool.k8s.test: 192.168.100.100
        tool.intra.k8s.test: 192.168.100.101
        home.k8s.test: 192.168.100.100
        home.intra.k8s.test: 192.168.100.101
        stream.intra.k8s.test: 192.168.100.101
        dev.intra.k8s.test: 192.168.100.101
        dl.intra.k8s.test: 192.168.100.101
# optional: use black and white lists to block queries (for example ads, trackers, adult pages etc.)
blocking:
    # definition of blacklist groups. Can be external link (http/https) or local file
    blackLists:
        ads:
            - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
            - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
            - http://sysctl.org/cameleon/hosts
            - https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
        special:
            - https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews/hosts
    # definition of whitelist groups. Attention: if the same group has black and whitelists, whitelists will be used to disable particular blacklist entries. If a group has only whitelist entries -> this means only domains from this list are allowed, all other domains will be blocked
    whiteLists: {}
    # definition: which groups should be applied for which client
    clientGroupsBlock:
        default:
            - ads
            - special
    # which response will be sent, if query is blocked:
    # zeroIp: 0.0.0.0 will be returned (default)
    # nxDomain: return NXDOMAIN as return code
    # comma separated list of destination IP addresses (for example: 192.100.100.15, 2001:0db8:85a3:08d3:1319:8a2e:0370:7344). Should contain ipv4 and ipv6 to cover all query types. Useful with running web server on this address to display the "blocked" page.
    blockType: zeroIp
    # optional: TTL for answers to blocked domains
    # default: 6h
    blockTTL: 1m
    # optional: automatically list refresh period (in duration format). Default: 4h.
    # Negative value -> deactivate automatically refresh.
    # 0 value -> use default
    refreshPeriod: 4h
    # optional: timeout for list download (each url). Default: 60s. Use large values for big lists or slow internet connections
    downloadTimeout: 4m
    # optional: Download attempt timeout. Default: 60s
    downloadAttempts: 5
    # optional: Time between the download attempts. Default: 1s
    downloadCooldown: 10s
    # optional: if true, application startup will fail if at least one list can't be downloaded / opened. Default: false
    failStartOnListError: false
# optional: configuration for caching of DNS responses
caching:
    # duration how long a response must be cached (min value).
    # If <=0, use response's TTL, if >0 use this value, if TTL is smaller
    # Default: 0
    minTime: 0
    # duration how long a response must be cached (max value).
    # If <0, do not cache responses
    # If 0, use TTL
    # If > 0, use this value, if TTL is greater
    # Default: 0
    maxTime: 0
    # Max number of cache entries (responses) to be kept in cache (soft limit). Useful on systems with limited amount of RAM.
    # Default (0): unlimited
    maxItemsCount: 0
    # if true, will preload DNS results for often used queries (default: names queried more than 5 times in a 2-hour time window)
    # this improves the response time for often used queries, but significantly increases external traffic
    # default: false
    prefetching: false
    # prefetch track time window (in duration format)
    # default: 120
    prefetchExpires: 2h
    # name queries threshold for prefetch
    # default: 5
    prefetchThreshold: 5
    # Max number of domains to be kept in cache for prefetching (soft limit). Useful on systems with limited amount of RAM.
    # Default (0): unlimited
    prefetchMaxItemsCount: 0
# optional: configuration of client name resolution
#clientLookup:
#  # optional: this DNS resolver will be used to perform reverse DNS lookup (typically local router)
#  upstream: udp:192.168.178.1
#  # optional: some routers return multiple names for client (host name and user defined name). Define which single name should be used.
#  # Example: take second name if present, if not take first name
#  singleNameOrder:
#    - 2
#    - 1
#  # optional: custom mapping of client name to IP addresses. Useful if reverse DNS does not work properly or just to have custom client names.
#  clients:
#    laptop:
#      - 192.168.178.29
# optional: configuration for prometheus metrics endpoint
prometheus:
    # enabled if true
    enable: true
    # url path, optional (default '/metrics')
    path: /metrics
# optional: write query information (question, answer, client, duration etc.) to daily csv file
queryLog:
    # optional one of: mysql, postgresql, csv, csv-client. If empty, log to console
    type: postgresql
    # directory (should be mounted as volume in docker) for csv, db connection string for mysql/postgresql
    target: ENC[AES256_GCM,data:fBN2NmDJ4HqJ6stTTAwoobkh1GMC0BplLXasBzxSEOaa82M25OPCq+XFJnk=,iv:Rl3NNi1RGWlyn1e2/Um47zvcR2zRoNa0nM0MVDRXCYY=,tag:BRMWqxpETuSNgzDFogmkmQ==,type:str]
    # if > 0, deletes log files which are older than ... days
    logRetentionDays: 7
    # optional: Max attempts to create specific query log writer, default: 3
    creationAttempts: 5
    # optional: Time between the creation attempts, default: 2s
    creationCooldown: 2s
# optional: Blocky can synchronize its cache and blocking state between multiple instances through redis.
redis:
    # Server address and port
    address: redis:6379
    # Password if necessary
    password: ENC[AES256_GCM,data:t69EJRyNZNE=,iv:hIkjNGbFejXtGd+/nNPu3GGQX14DV4m4UNqLhEdN6x8=,tag:YHx7Pellfs2TsduFdDAtfA==,type:str]
    # Database, default: 0
    database: 0
    # Connection is required for blocky to start. Default: false
    required: false
    # Max connection attempts, default: 3
    connectionAttempts: 5
    # Time between the connection attempts, default: 1s
    connectionCooldown: 2s
# optional: DNS listener port(s) and bind ip address(es), default 53 (UDP and TCP). Example: 53, :53, "127.0.0.1:5353,[::1]:5353"
port: 53
# optional: Port(s) and bind ip address(es) for DoT (DNS-over-TLS) listener. Example: 853, 127.0.0.1:853
#tlsPort: 53
# optional: HTTPS listener port(s) and bind ip address(es), default empty = no http listener. If > 0, will be used for prometheus metrics, pprof, REST API, DoH... Example: 443, :443, 127.0.0.1:443
httpPort: 4000
#httpsPort: 443
# mandatory, if https port > 0: path to cert and key file for SSL encryption
#certFile: server.crt
#keyFile: server.key
# optional: use this DNS server to resolve blacklist urls and upstream DNS servers. Useful if no DNS resolver is configured and blocky needs to resolve a host name. Format net:IP:port, net must be udp or tcp
#bootstrapDns: tcp:1.1.1.1
# optional: Drop all AAAA query if set to true. Default: false
disableIPv6: false
# optional: Log level (one from debug, info, warn, error). Default: info
logLevel: info
# optional: Log format (text or json). Default: text
logFormat: text
# optional: log timestamps. Default: true
logTimestamp: true
# optional: obfuscate log output (replace all alphanumeric characters with *) for user sensitive data like request domains or responses to increase privacy. Default: false
logPrivacy: false
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ykc9cp7e7sylr09ldufwd337h6kvghn8ga250unudvxxlaczpuzsv04rqn
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA5b3phaUNRTkZSUjhMYS93
            KzVTRHJKNzZNOXJDb08zUGNKRUM1OVhRWkhvCktlSzJ3eGtEVEp0c0RZS1EweWJo
            SnV5aUVWV1dsY2FvS2ZBbW5QenpwWHMKLS0tIG1YcXNSdnMzLzdIT2x2L0ppdzc2
            QVQyckRoNlVoOWoxc0lkQUR4WUFhSTAKrQJUoUKKPs4rueRU1OoUtMs4qz0SwC+c
            9bfh6h2JDRs8DTGmpacx/Z6GjEAKoIGgno/Zdi1If/1BEmwE9yWNtQ==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-06-27T20:01:32Z"
    mac: ENC[AES256_GCM,data:vORvi9peCleOsjrWbzJPrJA7npA5SK4s8z1wTwCkmxlg9yzq4DKwFqPKGuOaGw6HVfbJvEK8x2NIwBa+iROE5XCSv8uaZs2sX8NzDn+XDu05TZLxqO7QiA0eEUDdDvd3ma0+hWS5AsBz6/gh111we0fMyxrOCbZ85P9C7fadDrI=,iv:JG2cCf22hqVnMwxM4PZAve1T7NwU+kunXETuz+qA5fM=,tag:673yWLBQC6I2TbxZKRSvSQ==,type:str]
    pgp: []
    encrypted_regex: ^(target|password)$
    version: 3.7.3
