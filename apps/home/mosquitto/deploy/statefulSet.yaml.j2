apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mosquitto
  namespace: default
  labels:
    app: mosquitto
    app-component: mosquitto
spec:
  selector:
    matchLabels:
      app: mosquitto
      app-component: mosquitto
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mosquitto
        app-component: mosquitto
    spec:
      containers:
      - image: eclipse-mosquitto:1.5.5
        name: mosquitto
        ports:
        - containerPort: 1883
          name: mosquitto
        resources:
          requests:
            cpu: "{{ mosquitto_requests_cpu | default("100m") }}"
            memory: "{{ mosquitto_requests_memory | default("32Mi") }}"
          limits:
            cpu: "{{ mosquitto_limits_cpu | default("200m") }}"
            memory: "{{ mosquitto_limits_memory | default("64Mi") }}"
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: mosquitto-config-pv-claim
          mountPath: /mosquitto/config
        - name: mosquitto-data-pv-claim
          mountPath: /mosquitto/data
      securityContext:
        fsGroup: 1883 # mosquitto group inside the container
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      nodeSelector:
        capability/home: 'yes'
  volumeClaimTemplates:
  - metadata:
      name: mosquitto-config-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_local_lvm_storage_class_name }}
      resources:
        requests:
          storage: 16M
      selector:
        matchLabels:
          app: mosquitto
          app-component: mosquitto
          storage: config
  - metadata:
      name: mosquitto-data-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ kubernetes_local_lvm_storage_class_name }}
      resources:
        requests:
          storage: 128M
      selector:
        matchLabels:
          app: mosquitto
          app-component: mosquitto
          storage: data
